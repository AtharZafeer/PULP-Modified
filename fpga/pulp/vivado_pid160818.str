/*

Xilinx Vivado v2019.2 (64-bit) [Major: 2019, Minor: 2]
SW Build: 2708876 on Wed Nov  6 21:39:14 MST 2019
IP Build: 2700528 on Thu Nov  7 00:09:20 MST 2019

Process ID (PID): 160818
License: Customer

Current time: 	Sun Dec 10 13:37:19 UTC 2023
Time zone: 	Coordinated Universal Time (Etc/UTC)

OS: Ubuntu
OS Version: 5.15.0-88-generic
OS Architecture: amd64
Available processors (cores): 48

Display: :4
Screen size: 1920x1200
Screen resolution (DPI): 114
Available screens: 1
Available disk space: 797 GB
Default font: family=Dialog,name=Dialog,style=plain,size=14

Java version: 	9.0.4 64-bit
Java home: 	/cad/xilinx/Vivado/2019.2/tps/lnx64/jre9.0.4
Java executable location: 	/cad/xilinx/Vivado/2019.2/tps/lnx64/jre9.0.4/bin/java
Java initial memory (-Xms): 	128 MB
Java maximum memory (-Xmx):	 3 GB


User name: 	azafeer
User home directory: /home/azafeer
User working directory: /home/azafeer/Desktop/test/pulp-master/fpga/pulp
User country: 	US
User language: 	en
User locale: 	en_US

RDI_BASEROOT: /cad/xilinx/Vivado
HDI_APPROOT: /cad/xilinx/Vivado/2019.2
RDI_DATADIR: /cad/xilinx/Vivado/2019.2/data
RDI_BINDIR: /cad/xilinx/Vivado/2019.2/bin

Vivado preferences file location: /home/azafeer/.Xilinx/Vivado/2019.2/vivado.xml
Vivado preferences directory: /home/azafeer/.Xilinx/Vivado/2019.2/
Vivado layouts directory: /home/azafeer/.Xilinx/Vivado/2019.2/layouts
PlanAhead jar file location: 	/cad/xilinx/Vivado/2019.2/lib/classes/planAhead.jar
Vivado log file location: 	/home/azafeer/Desktop/test/pulp-master/fpga/pulp/vivado.log
Vivado journal file location: 	/home/azafeer/Desktop/test/pulp-master/fpga/pulp/vivado.jou
Engine tmp dir: 	./.Xil/Vivado-160818-compute

Xilinx Environment Variables
----------------------------
XILINX: /cad/xilinx/Vivado/2019.2/ids_lite/ISE
XILINXD_LICENSE_FILE: 2100@compute.eees.dei.unibo.it
XILINX_DSP: /cad/xilinx/Vivado/2019.2/ids_lite/ISE
XILINX_PLANAHEAD: /cad/xilinx/Vivado/2019.2
XILINX_SDK: /cad/xilinx/Vitis/2019.2
XILINX_SDX: /cad/xilinx/SDx/2019.2
XILINX_VITIS: /cad/xilinx/Vitis/2019.2
XILINX_VIVADO: /cad/xilinx/Vivado/2019.2
XILINX_VIVADO_HLS: /cad/xilinx/Vivado/2019.2


GUI allocated memory:	185 MB
GUI max memory:		3,072 MB
Engine allocated memory: 1,076 MB

Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.

*/

// TclEventType: START_GUI
// Tcl Message: start_gui 
// TclEventType: PROJECT_OPEN_DIALOG
// [GUI Memory]: 87 MB (+88396kb) [00:00:10]
// [Engine Memory]: 1,030 MB (+928049kb) [00:00:10]
// bB (cr):  Open Project : addNotify
// Opening Vivado Project: pulp-zcu102.xpr. Version: Vivado v2019.2 
// TclEventType: DEBUG_PROBE_SET_CHANGE
// Tcl Message: open_project pulp-zcu102.xpr 
// HMemoryUtils.trashcanNow. Engine heap size: 1,102 MB. GUI used memory: 52 MB. Current time: 12/10/23, 1:37:21 PM UTC
// TclEventType: MSGMGR_MOVEMSG
// TclEventType: FILESET_TARGET_UCF_CHANGE
// TclEventType: FILE_SET_NEW
// TclEventType: RUN_COMPLETED
// TclEventType: RUN_STATUS_CHANGE
// TclEventType: FILESET_TARGET_UCF_CHANGE
// TclEventType: RUN_CURRENT
// TclEventType: PROJECT_DASHBOARD_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: FILE_SET_CHANGE
// TclEventType: PROJECT_NEW
// [Engine Memory]: 1,159 MB (+82095kb) [00:00:35]
// [GUI Memory]: 105 MB (+14937kb) [00:00:36]
// [GUI Memory]: 113 MB (+2321kb) [00:00:36]
// [Engine Memory]: 1,221 MB (+3446kb) [00:00:37]
// [Engine Memory]: 1,294 MB (+13042kb) [00:00:37]
// WARNING: HEventQueue.dispatchEvent() is taking  4181 ms.
// Tcl Message: open_project pulp-zcu102.xpr 
// Tcl Message: Scanning sources... Finished scanning sources 
// Tcl Message: INFO: [IP_Flow 19-234] Refreshing IP repositories INFO: [IP_Flow 19-1704] No user IP repositories specified INFO: [IP_Flow 19-2313] Loaded Vivado IP repository '/cad/xilinx/Vivado/2019.2/data/ip'. 
// HMemoryUtils.trashcanNow. Engine heap size: 1,302 MB. GUI used memory: 60 MB. Current time: 12/10/23, 1:37:45 PM UTC
// Tcl Message: open_project: Time (s): cpu = 00:00:36 ; elapsed = 00:00:27 . Memory (MB): peak = 6827.598 ; gain = 235.133 ; free physical = 10110 ; free virtual = 92016 
// Project name: pulp-zcu102; location: /home/azafeer/Desktop/test/pulp-master/fpga/pulp; part: xczu9eg-ffvb1156-2-e
dismissDialog("Open Project"); // bB (cr)
// Tcl Message: update_compile_order -fileset sources_1 
// [GUI Memory]: 119 MB (+660kb) [00:00:52]
// [Engine Memory]: 1,379 MB (+20711kb) [00:00:52]
// HMemoryUtils.trashcanNow. Engine heap size: 1,379 MB. GUI used memory: 66 MB. Current time: 12/10/23, 1:38:01 PM UTC
// Elapsed time: 25 seconds
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Synthesis]", 13, true); // u (O, cr) - Node
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Synthesis]", 13, true); // u (O, cr) - Node
collapseTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Synthesis, Open Synthesized Design]", 15); // u (O, cr)
expandTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Synthesis, Open Synthesized Design]", 15); // u (O, cr)
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Synthesis, Open Synthesized Design, Schematic]", 26, false); // u (O, cr)
// bB (cr):  Open Synthesized Design : addNotify
// Tcl Message: open_run synth_1 -name synth_1 
// Tcl Message: Design is defaulting to impl run constrset: constrs_1 Design is defaulting to synth run part: xczu9eg-ffvb1156-2-e 
// HMemoryUtils.trashcanNow. Engine heap size: 1,439 MB. GUI used memory: 66 MB. Current time: 12/10/23, 1:38:26 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 2,172 MB. GUI used memory: 65 MB. Current time: 12/10/23, 1:38:41 PM UTC
// TclEventType: READ_XDC_FILE_START
// HMemoryUtils.trashcanNow. Engine heap size: 2,212 MB. GUI used memory: 66 MB. Current time: 12/10/23, 1:39:16 PM UTC
// TclEventType: READ_XDC_FILE_END
// TclEventType: FLOORPLAN_MODIFY
// TclEventType: DESIGN_NEW
// [Engine Memory]: 2,504 MB (+1108218kb) [00:02:21]
// HMemoryUtils.trashcanNow. Engine heap size: 2,504 MB. GUI used memory: 66 MB. Current time: 12/10/23, 1:39:29 PM UTC
// TclEventType: DESIGN_NEW
// Xgd.load filename: /cad/xilinx/Vivado/2019.2/data/parts/xilinx/zynquplus/devint/zynquplus/xczu9eg/xczu9eg.xgd; ZipEntry: xczu9eg_detail.xgd elapsed time: 1.1s
// TclEventType: HFED_INIT_ROUTE_STORAGE_COMPLETED
// RouteApi::loadEngineXgd elapsed time: 1.5s
// [GUI Memory]: 139 MB (+14492kb) [00:02:24]
// [Engine Memory]: 2,697 MB (+70293kb) [00:02:24]
// [GUI Memory]: 169 MB (+24367kb) [00:02:25]
// Device: addNotify
// DeviceView Instantiated
// [GUI Memory]: 182 MB (+5059kb) [00:02:27]
// WARNING: HEventQueue.dispatchEvent() is taking  3670 ms.
// TclEventType: CURR_DESIGN_SET
// Tcl Message: INFO: [Device 21-403] Loading part xczu9eg-ffvb1156-2-e 
// Tcl Message: Netlist sorting complete. Time (s): cpu = 00:00:00.03 ; elapsed = 00:00:00.02 . Memory (MB): peak = 7652.078 ; gain = 0.000 ; free physical = 9374 ; free virtual = 91283 
// Tcl Message: INFO: [Netlist 29-17] Analyzing 649 Unisim elements for replacement INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds INFO: [Project 1-479] Netlist was created with Vivado 2019.2 INFO: [Project 1-570] Preparing netlist for logic optimization 
// Tcl Message: Parsing XDC File [/home/azafeer/Desktop/test/pulp-master/fpga/pulp-zcu102/constraints/zcu102.xdc] 
// Tcl Message: INFO: [Timing 38-35] Done setting XDC timing constraints. [/home/azafeer/Desktop/test/pulp-master/fpga/pulp-zcu102/constraints/zcu102.xdc:25] 
// Tcl Message: INFO: [Vivado 12-626] No clocks found. Please use 'create_clock' or 'create_generated_clock' command to create clocks. [/home/azafeer/Desktop/test/pulp-master/fpga/pulp-zcu102/constraints/zcu102.xdc:61] 
// Tcl Message: INFO: [Vivado 12-626] No clocks found. Please use 'create_clock' or 'create_generated_clock' command to create clocks. [/home/azafeer/Desktop/test/pulp-master/fpga/pulp-zcu102/constraints/zcu102.xdc:61] 
// Tcl Message: INFO: [Vivado 12-626] No clocks found. Please use 'create_clock' or 'create_generated_clock' command to create clocks. [/home/azafeer/Desktop/test/pulp-master/fpga/pulp-zcu102/constraints/zcu102.xdc:61] 
// Tcl Message: INFO: [Vivado 12-626] No clocks found. Please use 'create_clock' or 'create_generated_clock' command to create clocks. [/home/azafeer/Desktop/test/pulp-master/fpga/pulp-zcu102/constraints/zcu102.xdc:65] 
// Tcl Message: INFO: [Vivado 12-626] No clocks found. Please use 'create_clock' or 'create_generated_clock' command to create clocks. [/home/azafeer/Desktop/test/pulp-master/fpga/pulp-zcu102/constraints/zcu102.xdc:65] 
// Tcl Message: INFO: [Vivado 12-626] No clocks found. Please use 'create_clock' or 'create_generated_clock' command to create clocks. [/home/azafeer/Desktop/test/pulp-master/fpga/pulp-zcu102/constraints/zcu102.xdc:68] 
// Tcl Message: INFO: [Vivado 12-626] No clocks found. Please use 'create_clock' or 'create_generated_clock' command to create clocks. [/home/azafeer/Desktop/test/pulp-master/fpga/pulp-zcu102/constraints/zcu102.xdc:68] 
// Tcl Message: INFO: [Vivado 12-626] No clocks found. Please use 'create_clock' or 'create_generated_clock' command to create clocks. [/home/azafeer/Desktop/test/pulp-master/fpga/pulp-zcu102/constraints/zcu102.xdc:93] 
// Tcl Message: INFO: [Vivado 12-626] No clocks found. Please use 'create_clock' or 'create_generated_clock' command to create clocks. [/home/azafeer/Desktop/test/pulp-master/fpga/pulp-zcu102/constraints/zcu102.xdc:93] 
// Tcl Message: INFO: [Vivado 12-626] No clocks found. Please use 'create_clock' or 'create_generated_clock' command to create clocks. [/home/azafeer/Desktop/test/pulp-master/fpga/pulp-zcu102/constraints/zcu102.xdc:94] 
// Tcl Message: INFO: [Vivado 12-626] No clocks found. Please use 'create_clock' or 'create_generated_clock' command to create clocks. [/home/azafeer/Desktop/test/pulp-master/fpga/pulp-zcu102/constraints/zcu102.xdc:94] 
// Tcl Message: INFO: [Vivado 12-626] No clocks found. Please use 'create_clock' or 'create_generated_clock' command to create clocks. [/home/azafeer/Desktop/test/pulp-master/fpga/pulp-zcu102/constraints/zcu102.xdc:95] 
// Tcl Message: INFO: [Vivado 12-626] No clocks found. Please use 'create_clock' or 'create_generated_clock' command to create clocks. [/home/azafeer/Desktop/test/pulp-master/fpga/pulp-zcu102/constraints/zcu102.xdc:95] 
// Tcl Message: INFO: [Vivado 12-626] No clocks found. Please use 'create_clock' or 'create_generated_clock' command to create clocks. [/home/azafeer/Desktop/test/pulp-master/fpga/pulp-zcu102/constraints/zcu102.xdc:96] 
// Tcl Message: INFO: [Vivado 12-626] No clocks found. Please use 'create_clock' or 'create_generated_clock' command to create clocks. [/home/azafeer/Desktop/test/pulp-master/fpga/pulp-zcu102/constraints/zcu102.xdc:96] 
// Tcl Message: INFO: [Common 17-14] Message 'Vivado 12-584' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings. [/home/azafeer/Desktop/test/pulp-master/fpga/pulp-zcu102/constraints/zcu102.xdc:367] 
// Tcl Message: Finished Parsing XDC File [/home/azafeer/Desktop/test/pulp-master/fpga/pulp-zcu102/constraints/zcu102.xdc] 
// Tcl Message: INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s). 
// Tcl Message: Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 7984.219 ; gain = 0.000 ; free physical = 9033 ; free virtual = 90942 
// Tcl Message: INFO: [Project 1-111] Unisim Transformation Summary:   A total of 245 instances were transformed.   IBUF => IBUF (IBUFCTRL, INBUF): 245 instances  
// Tcl Message: open_run: Time (s): cpu = 00:01:09 ; elapsed = 00:01:19 . Memory (MB): peak = 8178.996 ; gain = 1317.383 ; free physical = 8792 ; free virtual = 90705 
// ExpRunCommands.openSynthResults elapsed time: 79.5s
// Device view-level: 0.0
// Run Command: PAResourceCommand.PACommandNames_SCHEMATIC
// Schematic: addNotify
// S (cr): Critical Messages: addNotify
// Elapsed time: 81 seconds
dismissDialog("Open Synthesized Design"); // bB (cr)
// [GUI Memory]: 194 MB (+2800kb) [00:02:30]
// HMemoryUtils.trashcanNow. Engine heap size: 2,792 MB. GUI used memory: 136 MB. Current time: 12/10/23, 1:39:57 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 3,038 MB. GUI used memory: 135 MB. Current time: 12/10/23, 1:40:17 PM UTC
// [Engine Memory]: 3,056 MB (+235107kb) [00:03:22]
// HMemoryUtils.trashcanNow. Engine heap size: 3,369 MB. GUI used memory: 135 MB. Current time: 12/10/23, 1:40:42 PM UTC
// RouteApi::initDelayMediator elapsed time: 95s
// RouteApi: Init Delay Mediator Swing Worker Finished
// [Engine Memory]: 3,898 MB (+722452kb) [00:05:03]
// Elapsed time: 270 seconds
selectButton(PAResourceAtoD.CmdMsgDialog_OK, "OK"); // f (S)
dismissDialog("Critical Messages"); // S (cr)
// HMemoryUtils.trashcanNow. Engine heap size: 3,984 MB. GUI used memory: 134 MB. Current time: 12/10/23, 1:44:12 PM UTC
// Elapsed time: 32 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, (String) null); // aF (ac, cr)
// Tcl Command: 'set reg_count [llength [lindex [all_registers -cells]]]; ; set reg_list [lindex [all_registers -cells]]; ; for {set x 0} {$x<$reg_count} {incr x} { create_cell -reference MUXF7 [lindex $reg_list $x]_mux }; ; set input_nets [get_nets -of_objects [get_pins -of_objects $reg_list -filter {REF_PIN_NAME=~D}]]; ; f...'
// Tcl Command: 'set reg_count [llength [lindex [all_registers -cells]]]'
// Tcl Command: ''
// Tcl Command: 'set reg_list [lindex [all_registers -cells]]'
// Tcl Command: ''
// Tcl Command: 'for {set x 0} {$x<$reg_count} {incr x} { create_cell -reference MUXF7 [lindex $reg_list $x]_mux }'
// TclEventType: NETLIST_UPDATE
// Tcl Message: set reg_count [llength [lindex [all_registers -cells]]] 
// Tcl Message: INFO: [Timing 38-35] Done setting XDC timing constraints. 
// Tcl Message: 1835 
// Tcl Message: set reg_list [lindex [all_registers -cells]] 
// TclEventType: NETLIST_UPDATE
// Tcl Message: for {set x 0} {$x<$reg_count} {incr x} { create_cell -reference MUXF7 [lindex $reg_list $x]_mux } 
// TclEventType: NETLIST_UPDATE
// bB (cr):  Tcl Command Line : addNotify
// TclEventType: NETLIST_UPDATE
// HMemoryUtils.trashcanNow. Engine heap size: 4,010 MB. GUI used memory: 136 MB. Current time: 12/10/23, 1:44:47 PM UTC
// TclEventType: NETLIST_UPDATE
// Tcl Message: INFO: [Common 17-14] Message 'Netlist 29-46' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings. 
// TclEventType: NETLIST_UPDATE
// Tcl Command: ''
// Tcl Command: 'set input_nets [get_nets -of_objects [get_pins -of_objects $reg_list -filter {REF_PIN_NAME=~D}]]'
// Tcl Command: ''
// Tcl Command: 'for {set x 0} {$x<$reg_count} {incr x} { create_cell -reference AND2B1L [lindex $reg_list $x]_and1 [lindex $reg_list $x]_and2 }'
// TclEventType: NETLIST_UPDATE
// Tcl Message: set input_nets [get_nets -of_objects [get_pins -of_objects $reg_list -filter {REF_PIN_NAME=~D}]] 
// Tcl Message: for {set x 0} {$x<$reg_count} {incr x} { create_cell -reference AND2B1L [lindex $reg_list $x]_and1 [lindex $reg_list $x]_and2 } 
// TclEventType: NETLIST_UPDATE
// [GUI Memory]: 204 MB (+104kb) [00:09:29]
// TclEventType: NETLIST_UPDATE
// Tcl Command: ''
// Tcl Command: ''
// Tcl Command: 'for {set x 0} {$x<$reg_count} {incr x} { create_net  [lindex $reg_list $x]_and1or_net [lindex $reg_list $x]_and2or_net [lindex $reg_list $x]_muxo2d_net [lindex $reg_list $x]_mux_sel_net [lindex $reg_list $x]_or2mux_net}'
// TclEventType: NETLIST_UPDATE
// Tcl Message: for {set x 0} {$x<$reg_count} {incr x} { create_net  [lindex $reg_list $x]_and1or_net [lindex $reg_list $x]_and2or_net [lindex $reg_list $x]_muxo2d_net [lindex $reg_list $x]_mux_sel_net [lindex $reg_list $x]_or2mux_net} 
// TclEventType: NETLIST_UPDATE
// Tcl Command: ''
// Tcl Command: 'for {set x 0} {$x<$reg_count} {incr x} { create_cell -reference OR2L [lindex $reg_list $x]_OR }'
// TclEventType: NETLIST_UPDATE
// Tcl Message: for {set x 0} {$x<$reg_count} {incr x} { create_cell -reference OR2L [lindex $reg_list $x]_OR } 
// TclEventType: NETLIST_UPDATE
// Tcl Command: '#1'
// Tcl Command: '##for {set x 0} {$x< $reg_count} {incr x} { connect_net -net [get_nets [lindex $reg_list 1]_muxo2d_net] -objects  [list [get_pins -of_objects [lindex $reg_list $x] -filter {REF_PIN_NAME=~D}] [get_pins -of_objects [get_cells [lindex $reg_list $x]_mux] -filter {REF_PIN_NAME =~O}] ]}'
// Tcl Command: ''
// Tcl Command: '#connect the output of OR gate to the input I1 of MUX'
// Tcl Command: 'for {set x 0} {$x< $reg_count} {incr x} { connect_net -hierarchical -net [get_nets [lindex $reg_list $x]_or2mux_net] -objects  [list [get_pins -of_objects [get_cells [lindex $reg_list $x]_OR] -filter {REF_PIN_NAME =~O}] [get_pins -of_objects [get_cells [lindex $reg_list $x]_mux] -filter {REF_PIN_NAME =~I1}]]}'
// TclEventType: NETLIST_UPDATE
// Tcl Message: #1 
// Tcl Message: ##for {set x 0} {$x< $reg_count} {incr x} { connect_net -net [get_nets [lindex $reg_list 1]_muxo2d_net] -objects  [list [get_pins -of_objects [lindex $reg_list $x] -filter {REF_PIN_NAME=~D}] [get_pins -of_objects [get_cells [lindex $reg_list $x]_mux] -filter {REF_PIN_NAME =~O}] ]} 
// Tcl Message: #connect the output of OR gate to the input I1 of MUX 
// Tcl Message: for {set x 0} {$x< $reg_count} {incr x} { connect_net -hierarchical -net [get_nets [lindex $reg_list $x]_or2mux_net] -objects  [list [get_pins -of_objects [get_cells [lindex $reg_list $x]_OR] -filter {REF_PIN_NAME =~O}] [get_pins -of_objects [get_cells [lindex $reg_list $x]_mux] -filter {REF_PIN_NAME =~I1}]]} 
// TclEventType: NETLIST_UPDATE
// Tcl Message: INFO: [Common 17-14] Message 'Vivado 12-508' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings. 
// Tcl Message: INFO: [Common 17-14] Message 'Vivado 12-180' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings. 
// TclEventType: NETLIST_UPDATE
// [GUI Memory]: 214 MB (+192kb) [00:13:02]
// TclEventType: NETLIST_UPDATE
// Tcl Message: INFO: [Common 17-14] Message 'Vivado 12-507' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings. 
// TclEventType: NETLIST_UPDATE
// Tcl Command: ''
// Tcl Command: '##connect the output of AND gate 1 to the input DI of ORGATE'
// Tcl Command: 'for {set x 0} {$x< $reg_count} {incr x} { connect_net -net [get_nets [lindex $reg_list $x]_and1or_net] -objects  [list [get_pins -of_objects [get_cells [lindex $reg_list $x]_and1] -filter {REF_PIN_NAME =~O}] [get_pins -of_objects [get_cells [lindex $reg_list $x]_OR] -filter {REF_PIN_NAME =~DI}]]}'
// TclEventType: NETLIST_UPDATE
// Tcl Message: ##connect the output of AND gate 1 to the input DI of ORGATE 
// Tcl Message: for {set x 0} {$x< $reg_count} {incr x} { connect_net -net [get_nets [lindex $reg_list $x]_and1or_net] -objects  [list [get_pins -of_objects [get_cells [lindex $reg_list $x]_and1] -filter {REF_PIN_NAME =~O}] [get_pins -of_objects [get_cells [lindex $reg_list $x]_OR] -filter {REF_PIN_NAME =~DI}]]} 
// TclEventType: NETLIST_UPDATE
// Tcl Command: ''
// Tcl Command: '##connect the output of AND gate 2 to the input SRI of ORGATE'
// Tcl Command: 'for {set x 0} {$x< $reg_count} {incr x} { connect_net -net [get_nets [lindex $reg_list $x]_and2or_net] -objects  [list [get_pins -of_objects [get_cells [lindex $reg_list $x]_and2] -filter {REF_PIN_NAME =~O}] [get_pins -of_objects [get_cells [lindex $reg_list $x]_OR] -filter {REF_PIN_NAME =~SRI}]]}'
// TclEventType: NETLIST_UPDATE
// Tcl Message: ##connect the output of AND gate 2 to the input SRI of ORGATE 
// Tcl Message: for {set x 0} {$x< $reg_count} {incr x} { connect_net -net [get_nets [lindex $reg_list $x]_and2or_net] -objects  [list [get_pins -of_objects [get_cells [lindex $reg_list $x]_and2] -filter {REF_PIN_NAME =~O}] [get_pins -of_objects [get_cells [lindex $reg_list $x]_OR] -filter {REF_PIN_NAME =~SRI}]]} 
// TclEventType: NETLIST_UPDATE
// [GUI Memory]: 225 MB (+23kb) [00:15:13]
// TclEventType: NETLIST_UPDATE
// Tcl Command: ''
// Tcl Command: '#change the below to use mux_sel_net connect the DI and SRI of both and gates together, along witth mux'
// Tcl Command: 'for {set x 0} {$x< $reg_count} {incr x} { connect_net -net [get_nets [lindex $reg_list $x]_mux_sel_net] -objects  [list [get_pins -of_objects [get_cells [lindex $reg_list $x]_and1] -filter {REF_PIN_NAME =~SRI}] [get_pins -of_objects [get_cells [lindex $reg_list $x]_and2] -filter {REF_PIN_NAME =~DI}] [get_pins -of_objects [get_cells [lindex $reg_list $x]_mux] -filter {REF_PIN_NAME =~S}]]}'
// TclEventType: NETLIST_UPDATE
// Tcl Message: #change the below to use mux_sel_net connect the DI and SRI of both and gates together, along witth mux 
// Tcl Message: for {set x 0} {$x< $reg_count} {incr x} { connect_net -net [get_nets [lindex $reg_list $x]_mux_sel_net] -objects  [list [get_pins -of_objects [get_cells [lindex $reg_list $x]_and1] -filter {REF_PIN_NAME =~SRI}] [get_pins -of_objects [get_cells [lindex $reg_list $x]_and2] -filter {REF_PIN_NAME =~DI}] [get_pins -of_objects [get_cells [lindex $reg_list $x]_mux] -filter {REF_PIN_NAME =~S}]]} 
// TclEventType: NETLIST_UPDATE
// HMemoryUtils.trashcanNow. Engine heap size: 4,019 MB. GUI used memory: 137 MB. Current time: 12/10/23, 1:54:32 PM UTC
// Elapsed time: 593 seconds
dismissDialog("Tcl Command Line"); // bB (cr)
// Elapsed time: 193 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, (String) null); // aF (ac, cr)
closeView(PAResourceOtoP.PAViews_SCHEMATIC, "Schematic"); // f
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, registers_i (register_file_test_wrap)]", 7); // bD (O, cr)
// PAPropertyPanels.initPanels (riscv_register_file_i (riscv_register_file)) elapsed time: 5.3s
// WARNING: HEventQueue.dispatchEvent() is taking  5420 ms.
selectTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, registers_i (register_file_test_wrap), riscv_register_file_i (riscv_register_file)]", 10, false, false, false, false, true, false); // bD (O, cr) - Popup Trigger
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, registers_i (register_file_test_wrap), riscv_register_file_i (riscv_register_file)]", 10); // bD (O, cr)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, registers_i (register_file_test_wrap), riscv_register_file_i (riscv_register_file)]", 10); // bD (O, cr)
collapseTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, registers_i (register_file_test_wrap), riscv_register_file_i (riscv_register_file)]", 10); // bD (O, cr)
collapseTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, registers_i (register_file_test_wrap)]", 7); // bD (O, cr)
// HMemoryUtils.trashcanNow. Engine heap size: 4,027 MB. GUI used memory: 140 MB. Current time: 12/10/23, 1:57:57 PM UTC
selectTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, registers_i (register_file_test_wrap), riscv_register_file_i (riscv_register_file)]", 10, true, false, false, false, true, false); // bD (O, cr) - Popup Trigger - Node
selectMenu(PAResourceItoN.InstanceMenu_FLOORPLANNING, "Floorplanning"); // af (ao, cr)
selectMenu(PAResourceOtoP.PrimitivesMenu_HIGHLIGHT_LEAF_CELLS, "Highlight Leaf Cells"); // af (ao, cr)
selectMenu(PAResourceQtoS.SelectMenu_HIGHLIGHT, "Highlight"); // af (ao, cr)
selectMenu(PAResourceQtoS.SelectMenu_MARK, "Mark"); // af (ao, cr)
selectMenuItem(PAResourceCommand.PACommandNames_SCHEMATIC, "Schematic"); // ai (ao, cr)
// Run Command: PAResourceCommand.PACommandNames_SCHEMATIC
// Schematic: addNotify
// u (cr):  Generate Schematic : addNotify
dismissDialog("Generate Schematic"); // u (cr)
// HMemoryUtils.trashcanNow. Engine heap size: 4,064 MB. GUI used memory: 139 MB. Current time: 12/10/23, 1:58:12 PM UTC
// Elapsed time: 19 seconds
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, registers_i (register_file_test_wrap), riscv_register_file_i (riscv_register_file), Leaf Cells (7256)]", 12); // bD (O, cr)
selectTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, registers_i (register_file_test_wrap), riscv_register_file_i (riscv_register_file), Leaf Cells (7256), rf_gen[15].mem_reg[15][11]_and2 (AND2B1L)]", 4069, false); // bD (O, cr)
selectTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, registers_i (register_file_test_wrap), riscv_register_file_i (riscv_register_file), Leaf Cells (7256), rf_gen[15].mem_reg[15][11]_mux (MUXF7)]", 4070, false); // bD (O, cr)
// Elapsed time: 1376 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, (String) null); // aF (ac, cr)
// Tcl Command: 'rdi::info_commands {get*}'
// Tcl Command: 'rdi::info_commands {get_*}'
// Tcl Command: 'rdi::info_commands {get_net*}'
// Tcl Command: 'rdi::info_commands {re*}'
// Tcl Command: 'rdi::info_commands {l*}'
// Tcl Command: 'rdi::info_commands {linde*}'
// Tcl Command: 'rdi::info_commands {linde*}'
// Elapsed time: 89 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "get_nets [lindex $reg_list 1]_"); // aF (ac, cr)
// Elapsed time: 38 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "get_nets [lindex $input_nets 1]", true); // aF (ac, cr)
// Tcl Command: 'get_nets [lindex $input_nets 1]'
// Tcl Command: 'get_nets [lindex $input_nets 1]'
// Tcl Message: get_nets [lindex $input_nets 1] 
// Tcl Message: regfile_alu_waddr_id[0] 
// Tcl Command: 'rdi::info_commands {get*}'
// Tcl Command: 'rdi::info_commands {get_*}'
// Tcl Command: 'rdi::info_commands {get_pins*}'
// Tcl Command: 'rdi::match_options {get_pins} {}'
// Elapsed time: 15 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "get_pins -of_objects [get_nets [lindex $input_nets 1]]", true); // aF (ac, cr)
// Tcl Command: 'get_pins -of_objects [get_nets [lindex $input_nets 1]]'
// Tcl Command: 'get_pins -of_objects [get_nets [lindex $input_nets 1]]'
// Tcl Message: get_pins -of_objects [get_nets [lindex $input_nets 1]] 
// Tcl Message: regfile_alu_waddr_ex_o_reg[0]/D controller_i_i_6/O controller_i/regfile_alu_waddr_id_i[0] 
// Tcl Command: 'rdi::info_commands {repo*}'
// Tcl Command: 'rdi::info_commands {repor*}'
// Tcl Command: 'rdi::info_commands {report*}'
// Tcl Command: 'rdi::info_commands {report*}'
// Tcl Command: 'rdi::info_commands {report_*}'
// Tcl Command: 'rdi::info_commands {report_pro*}'
// Elapsed time: 32 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "report_property [get_pins -of_objects [get_nets [lindex $input_nets 1]]]", true); // aF (ac, cr)
// Tcl Command: 'report_property [get_pins -of_objects [get_nets [lindex $input_nets 1]]]'
// Tcl Command: 'report_property [get_pins -of_objects [get_nets [lindex $input_nets 1]]]'
// Tcl Message: report_property [get_pins -of_objects [get_nets [lindex $input_nets 1]]] 
// Tcl Message: ERROR: [Common 17-56] 'report_property' expects exactly one object got '3'. 
// Tcl Command: 'rdi::match_options {get_pins} {}'
// Tcl Command: 'rdi::match_options {get_pins} {filte}'
// Tcl Command: 'rdi::info_commands {report_propert*}'
// Tcl Command: 'rdi::info_commands {get*}'
// Tcl Command: 'rdi::info_commands {get_*}'
// Tcl Command: 'rdi::info_commands {get_cel*}'
// Tcl Command: 'rdi::match_options {get_cells} {}'
// Elapsed time: 70 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "get_cells -of_objects  [get_pins -of_objects [get_nets [lindex $input_nets 1]]]", true); // aF (ac, cr)
// Tcl Command: 'get_cells -of_objects  [get_pins -of_objects [get_nets [lindex $input_nets 1]]]'
// Tcl Command: 'get_cells -of_objects  [get_pins -of_objects [get_nets [lindex $input_nets 1]]]'
// Tcl Message: get_cells -of_objects  [get_pins -of_objects [get_nets [lindex $input_nets 1]]] 
// Tcl Message: regfile_alu_waddr_ex_o_reg[0] controller_i_i_6 controller_i 
// Elapsed time: 10 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "get_cells -of_objects  [get_pins -of_objects [get_nets [lindex $input_nets 1]]]", true); // aF (ac, cr)
// Tcl Command: 'get_cells -of_objects  [get_pins -of_objects [get_nets [lindex $input_nets 1]]]'
// Tcl Command: 'get_cells -of_objects  [get_pins -of_objects [get_nets [lindex $input_nets 1]]]'
// Tcl Message: get_cells -of_objects  [get_pins -of_objects [get_nets [lindex $input_nets 1]]] 
// Tcl Message: regfile_alu_waddr_ex_o_reg[0] controller_i_i_6 controller_i 
// Elapsed time: 20 seconds
selectTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, registers_i (register_file_test_wrap), riscv_register_file_i (riscv_register_file), Leaf Cells (7256), rf_gen[15].mem_reg[15][11] (FDCE)]", 4067, false); // bD (O, cr)
selectTab(RDIResource.PropertiesView_TABBED_PANE, (HResource) null, "General", 4); // i (c, cr)
selectTab(RDIResource.PropertiesView_TABBED_PANE, (HResource) null, "Cell Pins", 4); // i (c, cr)
// PAPropertyPanels.initPanels (rf_gen[15].mem[15][11]_i_1_n_0) elapsed time: 0.3s
// Elapsed time: 13 seconds
selectTab(RDIResource.PropertiesView_TABBED_PANE, (HResource) null, "Connectivity", 2); // i (c, cr)
selectTab(RDIResource.PropertiesView_TABBED_PANE, (HResource) null, "Power", 3); // i (c, cr)
selectTab(RDIResource.PropertiesView_TABBED_PANE, (HResource) null, "Aliases", 4); // i (c, cr)
selectTab(RDIResource.PropertiesView_TABBED_PANE, (HResource) null, "Cell Pins", 5); // i (c, cr)
// Elapsed time: 18 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "get_cells -of_objects  [get_pins -of_objects [get_nets [lindex $input_nets 55]]]", true); // aF (ac, cr)
// Tcl Command: 'get_cells -of_objects  [get_pins -of_objects [get_nets [lindex $input_nets 55]]]'
// Tcl Command: 'get_cells -of_objects  [get_pins -of_objects [get_nets [lindex $input_nets 55]]]'
// Tcl Message: get_cells -of_objects  [get_pins -of_objects [get_nets [lindex $input_nets 55]]] 
// Tcl Message: alu_vec_mode_ex_o_reg[1] alu_operand_b_ex_o[25]_i_9 alu_operand_b_ex_o[26]_i_1 alu_operand_b_ex_o[31]_i_3 alu_operand_b_ex_o[31]_i_5 alu_operand_b_ex_o[10]_i_1 alu_operand_b_ex_o[11]_i_1 alu_operand_b_ex_o[12]_i_1 alu_operand_b_ex_o[13]_i_1 alu_operand_b_ex_o[14]_i_1 alu_operand_b_ex_o[15]_i_1 alu_operand_b_ex_o[24]_i_1 alu_operand_b_ex_o[25]_i_1 alu_operand_b_ex_o[8]_i_1 alu_operand_b_ex_o[9]_i_1 alu_operand_b_ex_o[16]_i_7 alu_operand_b_ex_o[17]_i_7 decoder_i 
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "get_cells -of_objects  [get_pins -of_objects [get_nets [lindex $input_nets 4]]]", true); // aF (ac, cr)
// Tcl Command: 'get_cells -of_objects  [get_pins -of_objects [get_nets [lindex $input_nets 4]]]'
// Tcl Command: 'get_cells -of_objects  [get_pins -of_objects [get_nets [lindex $input_nets 4]]]'
// Tcl Message: get_cells -of_objects  [get_pins -of_objects [get_nets [lindex $input_nets 4]]] 
// Tcl Message: regfile_alu_waddr_ex_o_reg[3] controller_i_i_3 controller_i 
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "get_cells -of_objects  [get_pins -of_objects [get_nets [lindex $input_nets 20]]]", true); // aF (ac, cr)
// Tcl Command: 'get_cells -of_objects  [get_pins -of_objects [get_nets [lindex $input_nets 20]]]'
// Tcl Command: 'get_cells -of_objects  [get_pins -of_objects [get_nets [lindex $input_nets 20]]]'
// Tcl Message: get_cells -of_objects  [get_pins -of_objects [get_nets [lindex $input_nets 20]]] 
// Tcl Message: alu_operand_c_ex_o_reg[14] mult_dot_op_c_ex_o_reg[14] mult_operand_c_ex_o_reg[14] alu_operand_c_ex_o[14]_i_1 
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "get_cells -of_objects  [get_pins -of_objects [get_nets [lindex $input_nets 4]]]", true); // aF (ac, cr)
// Tcl Command: 'get_cells -of_objects  [get_pins -of_objects [get_nets [lindex $input_nets 4]]]'
// Tcl Command: 'get_cells -of_objects  [get_pins -of_objects [get_nets [lindex $input_nets 4]]]'
// Tcl Message: get_cells -of_objects  [get_pins -of_objects [get_nets [lindex $input_nets 4]]] 
// Tcl Message: regfile_alu_waddr_ex_o_reg[3] controller_i_i_3 controller_i 
selectCodeEditor(RDIResource.TclConsoleView_TCL_CONSOLE_CODE_EDITOR, 367, 160); // dT (af, cr)
selectCodeEditor(RDIResource.TclConsoleView_TCL_CONSOLE_CODE_EDITOR, 583, 161, false, false, false, true, false); // dT (af, cr) - Popup Trigger
selectMenuItem(RDIResource.TclConsoleView_COPY, "Copy"); // ai (ao, Popup.HeavyWeightWindow)
selectMenuItem(RDIResourceCommand.RDICommands_PASTE, "Paste"); // ai (ao, cr)
applyEnter(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "get_nets [lindex $input_nets 4"); // aF (ac, cr)
// Tcl Command: 'get_nets [lindex $input_nets 4]'
// Tcl Command: 'get_nets [lindex $input_nets 4]'
// Tcl Message: get_nets [lindex $input_nets 4] 
// Tcl Message: regfile_alu_waddr_id[3] 
selectButton(RDIResource.HTree_COLLAPSE_ALL, "Netlist_collapse_all"); // l (f, cr)
selectButton(RDIResource.HTree_COLLAPSE_ALL, "Netlist_collapse_all"); // l (f, cr)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, Nets (4969)]", 1); // bD (O, cr)
// Elapsed time: 17 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "get_cells -of_objects  [get_pins -of_objects [get_nets [lindex $input_nets 4]]]", true); // aF (ac, cr)
// Tcl Command: 'get_cells -of_objects  [get_pins -of_objects [get_nets [lindex $input_nets 4]]]'
// Tcl Command: 'get_cells -of_objects  [get_pins -of_objects [get_nets [lindex $input_nets 4]]]'
// Tcl Message: get_cells -of_objects  [get_pins -of_objects [get_nets [lindex $input_nets 4]]] 
// Tcl Message: regfile_alu_waddr_ex_o_reg[3] controller_i_i_3 controller_i 
selectButton(RDIResource.HTree_COLLAPSE_ALL, "Netlist_collapse_all"); // l (f, cr)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, controller_i (riscv_controller)]", 3); // bD (O, cr)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, controller_i (riscv_controller), Leaf Cells (238)]", 5); // bD (O, cr)
// Elapsed time: 11 seconds
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, decoder_i (riscv_decoder)]", 244); // bD (O, cr)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, decoder_i (riscv_decoder), Leaf Cells (309)]", 246); // bD (O, cr)
// HMemoryUtils.trashcanNow. Engine heap size: 4,067 MB. GUI used memory: 143 MB. Current time: 12/10/23, 2:28:12 PM UTC
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, hwloop_regs_i (riscv_hwloop_regs)]", 556); // bD (O, cr)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, hwloop_regs_i (riscv_hwloop_regs), Leaf Cells (1103)]", 558); // bD (O, cr)
selectButton(RDIResource.HTree_COLLAPSE_ALL, "Netlist_collapse_all"); // l (f, cr)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, int_controller_i (riscv_int_controller)]", 6); // bD (O, cr)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, int_controller_i (riscv_int_controller), Leaf Cells (48)]", 8); // bD (O, cr)
collapseTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, int_controller_i (riscv_int_controller), Leaf Cells (48)]", 8); // bD (O, cr)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, registers_i (register_file_test_wrap)]", 9); // bD (O, cr)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, registers_i (register_file_test_wrap), Leaf Cells (1)]", 11); // bD (O, cr)
collapseTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, registers_i (register_file_test_wrap), Leaf Cells (1)]", 11); // bD (O, cr)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, registers_i (register_file_test_wrap), riscv_register_file_i (riscv_register_file)]", 12); // bD (O, cr)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, registers_i (register_file_test_wrap), riscv_register_file_i (riscv_register_file), Leaf Cells (7256)]", 14); // bD (O, cr)
selectTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, registers_i (register_file_test_wrap), riscv_register_file_i (riscv_register_file), Leaf Cells (7256), rdata_b_o[1]_INST_0_i_4 (MUXF7)]", 448, false); // bD (O, cr)
// Elapsed time: 29 seconds
selectButton(RDIResource.HTree_COLLAPSE_ALL, "Netlist_collapse_all"); // l (f, cr)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, decoder_i (riscv_decoder)]", 4); // bD (O, cr)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, decoder_i (riscv_decoder), Leaf Cells (309)]", 6); // bD (O, cr)
// Elapsed time: 44 seconds
collapseTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, decoder_i (riscv_decoder), Leaf Cells (309)]", 6); // bD (O, cr)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, decoder_i (riscv_decoder), Nets (347)]", 5); // bD (O, cr)
collapseTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, decoder_i (riscv_decoder), Nets (347)]", 5); // bD (O, cr)
collapseTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, decoder_i (riscv_decoder)]", 4); // bD (O, cr)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, controller_i (riscv_controller)]", 3); // bD (O, cr)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, controller_i (riscv_controller), Leaf Cells (238)]", 5); // bD (O, cr)
// Elapsed time: 72 seconds
selectButton(RDIResource.HTree_COLLAPSE_ALL, "Netlist_collapse_all"); // l (f, cr)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, Nets (4969)]", 1); // bD (O, cr)
// Elapsed time: 18 seconds
selectTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, Nets (4969), regfile_waddr_ex_o]", 161, true); // bD (O, cr) - Node
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, Nets (4969), regfile_waddr_ex_o]", 161); // bD (O, cr)
selectTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, Nets (4969), regfile_waddr_ex_o, regfile_waddr_ex_o[3]]", 165, false); // bD (O, cr)
// Elapsed time: 13 seconds
collapseTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, Nets (4969), regfile_waddr_ex_o]", 161); // bD (O, cr)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, Nets (4969), regfile_waddr_ex_o_OBUF]", 162); // bD (O, cr)
selectTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, Nets (4969), regfile_waddr_ex_o_OBUF, regfile_waddr_ex_o_OBUF[3]]", 166, false); // bD (O, cr)
selectTable(PAResourceItoN.InstTermTablePanel_INSTTERM_PINS_TABLE, "Q ; Output ;  ; regfile_waddr_ex_o_reg[3] ;  ; false", 4, "Q", 0); // d (O, cr)
selectTable(PAResourceItoN.InstTermTablePanel_INSTTERM_PINS_TABLE, "Q ; Output ;  ; regfile_waddr_ex_o_reg[3] ;  ; false", 4, "Q", 0, false, false, false, false, true); // d (O, cr) - Double Click
selectTable(PAResourceItoN.InstTermTablePanel_INSTTERM_PINS_TABLE, "Q ; Output ;  ; regfile_waddr_ex_o_reg[3] ;  ; false", 4, "Q", 0); // d (O, cr)
selectTable(PAResourceItoN.InstTermTablePanel_INSTTERM_PINS_TABLE, "Q ; Output ;  ; regfile_waddr_ex_o_reg[3] ;  ; false", 4, "Q", 0, false, false, false, true, false); // d (O, cr) - Popup Trigger
selectMenuItem(PAResourceCommand.PACommandNames_SCHEMATIC, "Schematic"); // ai (ao, cr)
// Run Command: PAResourceCommand.PACommandNames_SCHEMATIC
// Schematic: addNotify
selectTab(RDIResource.PropertiesView_TABBED_PANE, (HResource) null, "Properties", 1); // i (c, cr)
closeView(PAResourceOtoP.PAViews_SCHEMATIC, "Schematic"); // f
selectTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, Nets (4969), regfile_waddr_ex_o_OBUF]", 162, true); // bD (O, cr) - Node
selectTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, Nets (4969), regfile_waddr_ex_o_OBUF]", 162, true, false, false, false, true, false); // bD (O, cr) - Popup Trigger - Node
selectMenuItem(PAResourceCommand.PACommandNames_SHOW_CONNECTIVITY, "Show Connectivity"); // ai (ao, cr)
// Run Command: PAResourceCommand.PACommandNames_SHOW_CONNECTIVITY
selectTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, Nets (4969), regfile_waddr_ex_o_OBUF]", 162, true, false, false, false, true, false); // bD (O, cr) - Popup Trigger - Node
selectMenuItem(PAResourceCommand.PACommandNames_SCHEMATIC, "Schematic"); // ai (ao, cr)
// Run Command: PAResourceCommand.PACommandNames_SCHEMATIC
// Schematic: addNotify
collapseTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, Nets (4969), regfile_waddr_ex_o_OBUF]", 162); // bD (O, cr)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, Nets (4969), regfile_waddr_ex_o]", 161); // bD (O, cr)
selectTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, Nets (4969), regfile_waddr_ex_o]", 161, true, false, false, false, true, false); // bD (O, cr) - Popup Trigger - Node
selectMenuItem(PAResourceCommand.PACommandNames_SCHEMATIC, "Schematic"); // ai (ao, cr)
// Run Command: PAResourceCommand.PACommandNames_SCHEMATIC
// Schematic: addNotify
selectTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, Nets (4969), regfile_waddr_ex_o, regfile_waddr_ex_o[3]]", 165, false); // bD (O, cr)
selectTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, Nets (4969), regfile_waddr_ex_o, regfile_waddr_ex_o[3]]", 165, false, false, false, false, true, false); // bD (O, cr) - Popup Trigger
selectTab(RDIResource.PropertiesView_TABBED_PANE, (HResource) null, "General", 0); // i (c, cr)
collapseTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, Nets (4969), regfile_waddr_ex_o]", 161); // bD (O, cr)
selectCodeEditor(RDIResource.TclConsoleView_TCL_CONSOLE_CODE_EDITOR, 193, 158); // dT (af, cr)
typeControlKey(RDIResource.TclConsoleView_TCL_CONSOLE_CODE_EDITOR, "RDIResource.TclConsoleView_TCL_CONSOLE_CODE_EDITOR", 'c'); // dT (af, cr)
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "get_pins -of_objects [get_nets [lindex $input_nets 4]", true); // aF (ac, cr)
// Tcl Command: 'get_pins -of_objects [get_nets [lindex $input_nets 4]]'
// Tcl Command: 'get_pins -of_objects [get_nets [lindex $input_nets 4]]'
// Tcl Message: get_pins -of_objects [get_nets [lindex $input_nets 4]] 
// Tcl Message: regfile_alu_waddr_ex_o_reg[3]/D controller_i_i_3/O controller_i/regfile_alu_waddr_id_i[3] 
selectButton(RDIResource.HTree_COLLAPSE_ALL, "Netlist_collapse_all"); // l (f, cr)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, controller_i (riscv_controller)]", 3); // bD (O, cr)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, controller_i (riscv_controller), Leaf Cells (238)]", 5); // bD (O, cr)
// Elapsed time: 12 seconds
selectButton(RDIResource.HTree_COLLAPSE_ALL, "Netlist_collapse_all"); // l (f, cr)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, hwloop_regs_i (riscv_hwloop_regs)]", 5); // bD (O, cr)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, hwloop_regs_i (riscv_hwloop_regs), Leaf Cells (1103)]", 7); // bD (O, cr)
// Elapsed time: 32 seconds
selectButton(RDIResource.HTree_COLLAPSE_ALL, "Netlist_collapse_all"); // l (f, cr)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, hwloop_regs_i (riscv_hwloop_regs)]", 5); // bD (O, cr)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, hwloop_regs_i (riscv_hwloop_regs), Leaf Cells (1103)]", 7); // bD (O, cr)
selectButton(RDIResource.HTree_COLLAPSE_ALL, "Netlist_collapse_all"); // l (f, cr)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, registers_i (register_file_test_wrap)]", 7); // bD (O, cr)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, registers_i (register_file_test_wrap), riscv_register_file_i (riscv_register_file)]", 10); // bD (O, cr)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, registers_i (register_file_test_wrap), Leaf Cells (1)]", 9); // bD (O, cr)
collapseTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, registers_i (register_file_test_wrap), Leaf Cells (1)]", 9); // bD (O, cr)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, registers_i (register_file_test_wrap), riscv_register_file_i (riscv_register_file), Leaf Cells (7256)]", 12); // bD (O, cr)
selectButton(RDIResource.HTree_COLLAPSE_ALL, "Netlist_collapse_all"); // l (f, cr)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, Leaf Cells (3735)]", 2); // bD (O, cr)
// Elapsed time: 21 seconds
selectTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, Leaf Cells (3735), regfile_alu_waddr_ex_o_reg[3] (FDCE)]", 3592, false); // bD (O, cr)
selectTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, Leaf Cells (3735), regfile_alu_waddr_ex_o_reg[3] (FDCE)]", 3592, false); // bD (O, cr)
selectTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, Leaf Cells (3735), regfile_alu_waddr_ex_o_reg[3] (FDCE)]", 3592, false, false, false, false, false, true); // bD (O, cr) - Double Click
closeView(PAResourceOtoP.PAViews_SCHEMATIC, "Schematic"); // f
selectTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, Leaf Cells (3735), regfile_alu_waddr_ex_o_reg[3] (FDCE)]", 3592, false); // bD (O, cr)
closeView(PAResourceOtoP.PAViews_SCHEMATIC, "Schematic"); // f
selectTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, Leaf Cells (3735), regfile_alu_waddr_ex_o_reg[3] (FDCE)]", 3592, false); // bD (O, cr)
selectTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, Leaf Cells (3735), regfile_alu_waddr_ex_o_reg[3]_and1 (AND2B1L)]", 3593, false); // bD (O, cr)
selectTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, Leaf Cells (3735), regfile_alu_waddr_ex_o_reg[3] (FDCE)]", 3592, false); // bD (O, cr)
closeView(PAResourceOtoP.PAViews_SCHEMATIC, "Schematic"); // f
selectButton(RDIResource.HTree_COLLAPSE_ALL, "Netlist_collapse_all"); // l (f, cr)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, Leaf Cells (3735)]", 2); // bD (O, cr)
selectTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, Leaf Cells (3735)]", 2, true, false, false, false, true, false); // bD (O, cr) - Popup Trigger - Node
selectMenu(PAResourceItoN.InstanceMenu_FLOORPLANNING, "Floorplanning"); // af (ao, cr)
selectMenu(PAResourceOtoP.PrimitivesMenu_HIGHLIGHT_LEAF_CELLS, "Highlight Leaf Cells"); // af (ao, cr)
selectMenuItem(PAResourceCommand.PACommandNames_SCHEMATIC, "Schematic"); // ai (ao, cr)
// Run Command: PAResourceCommand.PACommandNames_SCHEMATIC
// Schematic: addNotify
selectTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, Leaf Cells (3735), alu_operand_a_ex_o_OBUF[2]_inst (OBUF)]", 131, false); // bD (O, cr)
selectTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, Leaf Cells (3735), regfile_alu_waddr_ex_o_reg[3] (FDCE)]", 3592, false); // bD (O, cr)
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "get_nets [lindex $input_nets 4]", true); // aF (ac, cr)
// Tcl Command: 'get_nets [lindex $input_nets 4]'
// Tcl Command: 'get_nets [lindex $input_nets 4]'
// Tcl Message: get_nets [lindex $input_nets 4] 
// Tcl Message: regfile_alu_waddr_id[3] 
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "get_pins -of_objects [get_nets [lindex $input_nets 4]]", true); // aF (ac, cr)
// Tcl Command: 'get_pins -of_objects [get_nets [lindex $input_nets 4]]'
// Tcl Command: 'get_pins -of_objects [get_nets [lindex $input_nets 4]]'
// Tcl Message: get_pins -of_objects [get_nets [lindex $input_nets 4]] 
// Tcl Message: regfile_alu_waddr_ex_o_reg[3]/D controller_i_i_3/O controller_i/regfile_alu_waddr_id_i[3] 
// Tcl Command: 'rdi::info_commands {se*}'
// Tcl Command: 'rdi::info_commands {set*}'
// Elapsed time: 33 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "set input_pins_connections []"); // aF (ac, cr)
selectCodeEditor(RDIResource.TclConsoleView_TCL_CONSOLE_CODE_EDITOR, 1, 161); // dT (af, cr)
typeControlKey(RDIResource.TclConsoleView_TCL_CONSOLE_CODE_EDITOR, "RDIResource.TclConsoleView_TCL_CONSOLE_CODE_EDITOR", 'c'); // dT (af, cr)
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "set input_pins_connections [get_pins -of_objects [get_nets [lindex $input_nets 4]]]", true); // aF (ac, cr)
// Tcl Command: 'set input_pins_connections [get_pins -of_objects [get_nets [lindex $input_nets 4]]]'
// Tcl Command: 'set input_pins_connections [get_pins -of_objects [get_nets [lindex $input_nets 4]]]'
// Tcl Message: set input_pins_connections [get_pins -of_objects [get_nets [lindex $input_nets 4]]] 
// Tcl Message: regfile_alu_waddr_ex_o_reg[3]/D controller_i_i_3/O controller_i/regfile_alu_waddr_id_i[3] 
// Tcl Command: 'rdi::info_commands {d*}'
// Tcl Command: 'rdi::info_commands {dis*}'
// Tcl Command: 'rdi::match_options {disconnect_net} {}'
// Tcl Command: 'rdi::info_commands {linde*}'
// Tcl Command: 'rdi::info_commands {get*}'
// Tcl Command: 'rdi::info_commands {get_*}'
// Tcl Command: 'rdi::info_commands {get_net*}'
// Tcl Command: 'rdi::match_options {disconnect_net} {}'
// Elapsed time: 92 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "disconnect_net -net [get_nets [lindex $input_nets 4]] -objects [list $input_pins_connections]", true); // aF (ac, cr)
// Tcl Command: 'disconnect_net -net [get_nets [lindex $input_nets 4]] -objects [list $input_pins_connections]'
// Tcl Command: 'disconnect_net -net [get_nets [lindex $input_nets 4]] -objects [list $input_pins_connections]'
// Tcl Message: disconnect_net -net [get_nets [lindex $input_nets 4]] -objects [list $input_pins_connections] 
// Elapsed time: 32 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "$input_pins_connections", true); // aF (ac, cr)
// Tcl Command: '$input_pins_connections'
// Tcl Command: '$input_pins_connections'
// Tcl Message: $input_pins_connections 
// Tcl Message: invalid command name "regfile_alu_waddr_ex_o_reg[3]/D controller_i_i_3/O controller_i/regfile_alu_waddr_id_i[3]" 
// Tcl Command: 'rdi::info_commands {get*}'
// Tcl Command: 'rdi::info_commands {get_*}'
// Tcl Command: 'rdi::info_commands {get_pin*}'
// Tcl Command: 'rdi::match_options {get_pins} {}'
// Elapsed time: 258 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "get_pins [$input_pins_connections]", true); // aF (ac, cr)
// Tcl Command: 'get_pins [$input_pins_connections]'
// Tcl Command: 'get_pins [$input_pins_connections]'
// Tcl Message: get_pins [$input_pins_connections] 
// Tcl Message: invalid command name "regfile_alu_waddr_ex_o_reg[3]/D controller_i_i_3/O controller_i/regfile_alu_waddr_id_i[3]" 
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "get_pins $input_pins_connections", true); // aF (ac, cr)
// Tcl Command: 'get_pins $input_pins_connections'
// Tcl Command: 'get_pins $input_pins_connections'
// Tcl Message: get_pins $input_pins_connections 
// Tcl Message: regfile_alu_waddr_ex_o_reg[3]/D controller_i_i_3/O controller_i/regfile_alu_waddr_id_i[3] 
// Tcl Command: 'rdi::info_commands {lin*}'
// Elapsed time: 17 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "get_pins [lindex $input_pins_connections]", true); // aF (ac, cr)
// Tcl Command: 'get_pins [lindex $input_pins_connections]'
// Tcl Command: 'get_pins [lindex $input_pins_connections]'
// Tcl Message: get_pins [lindex $input_pins_connections] 
// Tcl Message: regfile_alu_waddr_ex_o_reg[3]/D controller_i_i_3/O controller_i/regfile_alu_waddr_id_i[3] 
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "get_pins [lindex $input_pins_connections 1]", true); // aF (ac, cr)
// Tcl Command: 'get_pins [lindex $input_pins_connections 1]'
// Tcl Command: 'get_pins [lindex $input_pins_connections 1]'
// Tcl Message: get_pins [lindex $input_pins_connections 1] 
// Tcl Message: controller_i_i_3/O 
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "get_pins [lindex $input_pins_connections 2]", true); // aF (ac, cr)
// Tcl Command: 'get_pins [lindex $input_pins_connections 2]'
// Tcl Command: 'get_pins [lindex $input_pins_connections 2]'
// Tcl Message: get_pins [lindex $input_pins_connections 2] 
// Tcl Message: controller_i/regfile_alu_waddr_id_i[3] 
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "get_pins [lindex $input_pins_connections 3]", true); // aF (ac, cr)
// Tcl Command: 'get_pins [lindex $input_pins_connections 3]'
// Tcl Command: 'get_pins [lindex $input_pins_connections 3]'
// Tcl Message: get_pins [lindex $input_pins_connections 3] 
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "get_pins [lindex $input_pins_connections 0]", true); // aF (ac, cr)
// Tcl Command: 'get_pins [lindex $input_pins_connections 0]'
// Tcl Command: 'get_pins [lindex $input_pins_connections 0]'
// Tcl Message: get_pins [lindex $input_pins_connections 0] 
// Tcl Message: regfile_alu_waddr_ex_o_reg[3]/D 
// Tcl Command: 'rdi::info_commands {linde*}'
// Elapsed time: 228 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "disconnect_net -net [get_nets [lindex $input_nets 4]] -objects [list [lindex $input_pins_connections 0]", true); // aF (ac, cr)
// Tcl Command: 'disconnect_net -net [get_nets [lindex $input_nets 4]] -objects [list [lindex $input_pins_connections 0]]'
// Tcl Command: 'disconnect_net -net [get_nets [lindex $input_nets 4]] -objects [list [lindex $input_pins_connections 0]]'
// TclEventType: NETLIST_UPDATE
// Tcl Message: disconnect_net -net [get_nets [lindex $input_nets 4]] -objects [list [lindex $input_pins_connections 0]] 
// HMemoryUtils.trashcanNow. Engine heap size: 4,070 MB. GUI used memory: 139 MB. Current time: 12/10/23, 2:47:41 PM UTC
// WARNING: HEventQueue.dispatchEvent() is taking  1021 ms.
// Elapsed time: 50 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "connect_net -net [get_nets [lindex $reg_list 4]_] -objects [list [lindex $input_pins_connections 0]]"); // aF (ac, cr)
// Elapsed time: 12 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "connect_net -net [get_nets [lindex $reg_list 4]_muxo2d] -objects [list [lindex $input_pins_connections 0]]"); // aF (ac, cr)
// Elapsed time: 18 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "connect_net -net [get_nets [lindex $reg_list 4]_muxo2d_net] -objects [list [lindex $input_pins_connections 0]]", true); // aF (ac, cr)
// Tcl Command: 'connect_net -net [get_nets [lindex $reg_list 4]_muxo2d_net] -objects [list [lindex $input_pins_connections 0]]'
// Tcl Command: 'connect_net -net [get_nets [lindex $reg_list 4]_muxo2d_net] -objects [list [lindex $input_pins_connections 0]]'
// TclEventType: NETLIST_UPDATE
// Tcl Message: connect_net -net [get_nets [lindex $reg_list 4]_muxo2d_net] -objects [list [lindex $input_pins_connections 0]] 
// HMemoryUtils.trashcanNow. Engine heap size: 4,070 MB. GUI used memory: 141 MB. Current time: 12/10/23, 2:49:00 PM UTC
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "disconnect_net -net [get_nets [lindex $input_nets 4]] -objects [list [lindex $input_pins_connections 1]]", true); // aF (ac, cr)
// Tcl Command: 'disconnect_net -net [get_nets [lindex $input_nets 4]] -objects [list [lindex $input_pins_connections 1]]'
// Tcl Command: 'disconnect_net -net [get_nets [lindex $input_nets 4]] -objects [list [lindex $input_pins_connections 1]]'
// TclEventType: NETLIST_UPDATE
// Tcl Message: disconnect_net -net [get_nets [lindex $input_nets 4]] -objects [list [lindex $input_pins_connections 1]] 
// HMemoryUtils.trashcanNow. Engine heap size: 4,070 MB. GUI used memory: 144 MB. Current time: 12/10/23, 2:49:09 PM UTC
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "connect_net -net [get_nets [lindex $reg_list 4]_muxo2d_net] -objects [list [lindex $input_pins_connections 1]]", true); // aF (ac, cr)
// Tcl Command: 'connect_net -net [get_nets [lindex $reg_list 4]_muxo2d_net] -objects [list [lindex $input_pins_connections 1]]'
// Tcl Command: 'connect_net -net [get_nets [lindex $reg_list 4]_muxo2d_net] -objects [list [lindex $input_pins_connections 1]]'
// TclEventType: NETLIST_UPDATE
// Tcl Message: connect_net -net [get_nets [lindex $reg_list 4]_muxo2d_net] -objects [list [lindex $input_pins_connections 1]] 
// HMemoryUtils.trashcanNow. Engine heap size: 4,070 MB. GUI used memory: 144 MB. Current time: 12/10/23, 2:49:15 PM UTC
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "disconnect_net -net [get_nets [lindex $input_nets 4]] -objects [list [lindex $input_pins_connections 2]]", true); // aF (ac, cr)
// Tcl Command: 'disconnect_net -net [get_nets [lindex $input_nets 4]] -objects [list [lindex $input_pins_connections 2]]'
// Tcl Command: 'disconnect_net -net [get_nets [lindex $input_nets 4]] -objects [list [lindex $input_pins_connections 2]]'
// TclEventType: NETLIST_UPDATE
// Tcl Message: disconnect_net -net [get_nets [lindex $input_nets 4]] -objects [list [lindex $input_pins_connections 2]] 
// HMemoryUtils.trashcanNow. Engine heap size: 4,070 MB. GUI used memory: 144 MB. Current time: 12/10/23, 2:49:19 PM UTC
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "connect_net -net [get_nets [lindex $reg_list 4]_muxo2d_net] -objects [list [lindex $input_pins_connections 2]]", true); // aF (ac, cr)
// Tcl Command: 'connect_net -net [get_nets [lindex $reg_list 4]_muxo2d_net] -objects [list [lindex $input_pins_connections 2]]'
// Tcl Command: 'connect_net -net [get_nets [lindex $reg_list 4]_muxo2d_net] -objects [list [lindex $input_pins_connections 2]]'
// TclEventType: NETLIST_UPDATE
// Tcl Message: connect_net -net [get_nets [lindex $reg_list 4]_muxo2d_net] -objects [list [lindex $input_pins_connections 2]] 
// HMemoryUtils.trashcanNow. Engine heap size: 4,070 MB. GUI used memory: 144 MB. Current time: 12/10/23, 2:49:25 PM UTC
selectTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, Nets (4969), regfile_alu_waddr_id, regfile_alu_waddr_id[3]]", 159, false); // bD (O, cr)
collapseTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, Nets (4969), regfile_alu_waddr_id]", 155); // bD (O, cr)
// Elapsed time: 24 seconds
selectButton(RDIResource.HTree_COLLAPSE_ALL, "Netlist_collapse_all"); // l (f, cr)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, Leaf Cells (3735)]", 2); // bD (O, cr)
// Elapsed time: 24 seconds
selectTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, Leaf Cells (3735), regfile_alu_we_ex_o_reg (FDCE)]", 3643, false); // bD (O, cr)
// Elapsed time: 24 seconds
selectTable(PAResourceItoN.InstTermTablePanel_INSTTERM_PINS_TABLE, "D ; Input ;  ; regfile_alu_we_ex_o_i_2_n_0 ;  ; false", 3, "regfile_alu_we_ex_o_i_2_n_0", 3); // d (O, cr)
// Elapsed time: 22 seconds
selectButton(PAResourceQtoS.SchematicView_REGENERATE, "Schematic_refresh"); // E (f, cr)
selectTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, Leaf Cells (3735), regfile_alu_we_ex_o_reg (FDCE)]", 6395, false); // bD (O, cr)
selectTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, Leaf Cells (3735), regfile_alu_we_ex_o_OBUF_inst (OBUF)]", 6394, false); // bD (O, cr)
selectTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, Leaf Cells (3735), regfile_alu_we_ex_o_reg (FDCE)]", 6395, false); // bD (O, cr)
// Elapsed time: 26 seconds
closeView(PAResourceOtoP.PAViews_SCHEMATIC, "Schematic"); // f
selectButton(RDIResource.HTree_COLLAPSE_ALL, "Netlist_collapse_all"); // l (f, cr)
selectTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, Leaf Cells (3735)]", 2, true, false, false, false, true, false); // bD (O, cr) - Popup Trigger - Node
selectMenu(PAResourceItoN.InstanceMenu_FLOORPLANNING, "Floorplanning"); // af (ao, cr)
selectMenu(PAResourceOtoP.PrimitivesMenu_HIGHLIGHT_LEAF_CELLS, "Highlight Leaf Cells"); // af (ao, cr)
selectMenuItem(PAResourceCommand.PACommandNames_SCHEMATIC, "Schematic"); // ai (ao, cr)
// Run Command: PAResourceCommand.PACommandNames_SCHEMATIC
// Schematic: addNotify
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, Leaf Cells (3735)]", 2); // bD (O, cr)
// Elapsed time: 12 seconds
selectTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, Leaf Cells (3735), regfile_alu_waddr_ex_o_reg[3] (FDCE)]", 3592, false); // bD (O, cr)
// Tcl Command: 'rdi::info_commands {ll*}'
// Elapsed time: 110 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, (String) null, true); // aF (ac, cr)
// Tcl Command: 'rdi::info_commands {lindex*}'
// Elapsed time: 11 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "get_pins $input_pins_connections", true); // aF (ac, cr)
// Tcl Command: 'get_pins $input_pins_connections'
// Tcl Command: 'get_pins $input_pins_connections'
// Tcl Message: get_pins $input_pins_connections 
// Tcl Message: regfile_alu_waddr_ex_o_reg[3]/D controller_i_i_3/O controller_i/regfile_alu_waddr_id_i[3] 
// Tcl Command: 'rdi::info_commands {ll*}'
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "llength [get_pins $input_pins_connections]", true); // aF (ac, cr)
// Tcl Command: 'llength [get_pins $input_pins_connections]'
// Tcl Command: 'llength [get_pins $input_pins_connections]'
// Tcl Message: llength [get_pins $input_pins_connections] 
// Tcl Message: 3 
// Elapsed time: 38 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, (String) null); // aF (ac, cr)
selectCodeEditor(RDIResource.TclConsoleView_TCL_CONSOLE_CODE_EDITOR, 2, 93); // dT (af, cr)
selectCodeEditor(RDIResource.TclConsoleView_TCL_CONSOLE_CODE_EDITOR, 516, 140); // dT (af, cr)
selectCodeEditor(RDIResource.TclConsoleView_TCL_CONSOLE_CODE_EDITOR, 0, 94); // dT (af, cr)
typeControlKey(RDIResource.TclConsoleView_TCL_CONSOLE_CODE_EDITOR, "RDIResource.TclConsoleView_TCL_CONSOLE_CODE_EDITOR", 'c'); // dT (af, cr)
// Elapsed time: 36 seconds
selectCodeEditor(RDIResource.TclConsoleView_TCL_CONSOLE_CODE_EDITOR, 236, 159); // dT (af, cr)
typeControlKey(RDIResource.TclConsoleView_TCL_CONSOLE_CODE_EDITOR, "RDIResource.TclConsoleView_TCL_CONSOLE_CODE_EDITOR", 'c'); // dT (af, cr)
// Elapsed time: 14 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, (String) null); // aF (ac, cr)
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "set input_pins_connection_count [llength [get_pins $input_pins_connections]]", true); // aF (ac, cr)
// Tcl Command: 'set input_pins_connection_count [llength [get_pins $input_pins_connections]]'
// Tcl Command: 'set input_pins_connection_count [llength [get_pins $input_pins_connections]]'
// Tcl Message: set input_pins_connection_count [llength [get_pins $input_pins_connections]] 
// Tcl Message: 3 
// Elapsed time: 55 seconds
selectCodeEditor(RDIResource.TclConsoleView_TCL_CONSOLE_CODE_EDITOR, 2, 37); // dT (af, cr)
typeControlKey(RDIResource.TclConsoleView_TCL_CONSOLE_CODE_EDITOR, "RDIResource.TclConsoleView_TCL_CONSOLE_CODE_EDITOR", 'c'); // dT (af, cr)
// Elapsed time: 19 seconds
selectCodeEditor(RDIResource.TclConsoleView_TCL_CONSOLE_CODE_EDITOR, 0, 56); // dT (af, cr)
typeControlKey(RDIResource.TclConsoleView_TCL_CONSOLE_CODE_EDITOR, "RDIResource.TclConsoleView_TCL_CONSOLE_CODE_EDITOR", 'c'); // dT (af, cr)
// Elapsed time: 21 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, (String) null); // aF (ac, cr)
// Tcl Command: 'for {set x 0} {$x< $reg_count} {incr x} {;     set input_pins_connections [get_pins -of_objects [get_nets [lindex $input_nets $x]]];     set input_pins_connection_count [llength [get_pins $input_pins_connections]];     for(set y 0} {$y < $input_pins_connection_count} {incr $y} {;         disconnect_net -...'
// Tcl Command: 'for {set x 0} {$x< $reg_count} {incr x} {;     set input_pins_connections [get_pins -of_objects [get_nets [lindex $input_nets $x]]];     set input_pins_connection_count [llength [get_pins $input_pins_connections]];     for(set y 0} {$y < $input_pins_connection_count} {incr $y} {;         disconnect_net -net [get_nets [lindex $input_nets $x]] -objects [list [lindex $input_pins_connections $y]];         connect_net -net [get_nets [lindex $reg_list $x]_muxo2d_net] -objects [list [lindex $input_pins_connections $y]];     }'
// Tcl Message: for {set x 0} {$x< $reg_count} {incr x} {     set input_pins_connections [get_pins -of_objects [get_nets [lindex $input_nets $x]]]     set input_pins_connection_count [llength [get_pins $input_pins_connections]]     for(set y 0} {$y < $input_pins_connection_count} {incr $y} {         disconnect_net -net [get_nets [lindex $input_nets $x]] -objects [list [lindex $input_pins_connections $y]]         connect_net -net [get_nets [lindex $reg_list $x]_muxo2d_net] -objects [list [lindex $input_pins_connections $y]]     } 
// Tcl Message: wrong # args: should be "for start test next command" 
// Elapsed time: 18 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, (String) null); // aF (ac, cr)
// Tcl Command: 'for {set x 0} {$x< $reg_count} {incr x} {;     set input_pins_connections [get_pins -of_objects [get_nets [lindex $input_nets $x]]];     set input_pins_connection_count [llength [get_pins $input_pins_connections]];     for {set y 0} {$y < $input_pins_connection_count} {incr $y} {;         disconnect_net...'
// Tcl Command: 'for {set x 0} {$x< $reg_count} {incr x} {;     set input_pins_connections [get_pins -of_objects [get_nets [lindex $input_nets $x]]];     set input_pins_connection_count [llength [get_pins $input_pins_connections]];     for {set y 0} {$y < $input_pins_connection_count} {incr $y} {;         disconnect_net -net [get_nets [lindex $input_nets $x]] -objects [list [lindex $input_pins_connections $y]];         connect_net -net [get_nets [lindex $reg_list $x]_muxo2d_net] -objects [list [lindex $input_pins_connections $y]];     }; }'
// TclEventType: NETLIST_UPDATE
// Tcl Message: for {set x 0} {$x< $reg_count} {incr x} {     set input_pins_connections [get_pins -of_objects [get_nets [lindex $input_nets $x]]]     set input_pins_connection_count [llength [get_pins $input_pins_connections]]     for {set y 0} {$y < $input_pins_connection_count} {incr $y} {         disconnect_net -net [get_nets [lindex $input_nets $x]] -objects [list [lindex $input_pins_connections $y]]         connect_net -net [get_nets [lindex $reg_list $x]_muxo2d_net] -objects [list [lindex $input_pins_connections $y]]     } } 
// Tcl Message: INFO: [Common 17-14] Message 'Netlist 29-66' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings. 
// Tcl Message: INFO: [Common 17-14] Message 'Netlist 29-65' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings. 
// bB (cr):  Tcl Command Line : addNotify
// HMemoryUtils.trashcanNow. Engine heap size: 4,082 MB. GUI used memory: 143 MB. Current time: 12/10/23, 3:01:02 PM UTC
// [Engine Memory]: 4,093 MB (+159kb) [01:24:32]
// HMemoryUtils.trashcanNow. Engine heap size: 4,103 MB. GUI used memory: 142 MB. Current time: 12/10/23, 3:02:07 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 4,124 MB. GUI used memory: 142 MB. Current time: 12/10/23, 3:03:07 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 4,145 MB. GUI used memory: 142 MB. Current time: 12/10/23, 3:04:07 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 4,172 MB. GUI used memory: 142 MB. Current time: 12/10/23, 3:04:32 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 4,193 MB. GUI used memory: 142 MB. Current time: 12/10/23, 3:06:02 PM UTC
// Elapsed time: 517 seconds
selectButton(RDIResource.ProgressDialog_BACKGROUND, "Background"); // a (bB)
// HMemoryUtils.trashcanNow. Engine heap size: 4,212 MB. GUI used memory: 142 MB. Current time: 12/10/23, 3:06:57 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 4,234 MB. GUI used memory: 143 MB. Current time: 12/10/23, 3:07:32 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 4,255 MB. GUI used memory: 143 MB. Current time: 12/10/23, 3:09:07 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 4,276 MB. GUI used memory: 142 MB. Current time: 12/10/23, 3:10:07 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 4,296 MB. GUI used memory: 142 MB. Current time: 12/10/23, 3:11:07 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 4,340 MB. GUI used memory: 142 MB. Current time: 12/10/23, 3:11:47 PM UTC
// [Engine Memory]: 4,340 MB (+44537kb) [01:34:57]
// Elapsed time: 337 seconds
selectTab((HResource) null, (HResource) null, "Sources", 0); // aL (aI, cr)
selectTab((HResource) null, (HResource) null, "Netlist", 1); // aL (aI, cr)
// HMemoryUtils.trashcanNow. Engine heap size: 4,361 MB. GUI used memory: 143 MB. Current time: 12/10/23, 3:13:32 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 4,382 MB. GUI used memory: 142 MB. Current time: 12/10/23, 3:14:32 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 4,402 MB. GUI used memory: 142 MB. Current time: 12/10/23, 3:15:32 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 4,423 MB. GUI used memory: 142 MB. Current time: 12/10/23, 3:16:32 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 4,443 MB. GUI used memory: 142 MB. Current time: 12/10/23, 3:17:32 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 4,464 MB. GUI used memory: 142 MB. Current time: 12/10/23, 3:18:32 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 4,484 MB. GUI used memory: 142 MB. Current time: 12/10/23, 3:19:32 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 4,504 MB. GUI used memory: 142 MB. Current time: 12/10/23, 3:20:27 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 4,525 MB. GUI used memory: 142 MB. Current time: 12/10/23, 3:21:27 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 4,546 MB. GUI used memory: 142 MB. Current time: 12/10/23, 3:22:27 PM UTC
// [Engine Memory]: 4,558 MB (+1659kb) [01:45:56]
// HMemoryUtils.trashcanNow. Engine heap size: 4,567 MB. GUI used memory: 142 MB. Current time: 12/10/23, 3:23:27 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 4,596 MB. GUI used memory: 142 MB. Current time: 12/10/23, 3:23:52 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 4,617 MB. GUI used memory: 142 MB. Current time: 12/10/23, 3:25:47 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 4,686 MB. GUI used memory: 142 MB. Current time: 12/10/23, 3:26:07 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 4,707 MB. GUI used memory: 142 MB. Current time: 12/10/23, 3:28:12 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 4,768 MB. GUI used memory: 142 MB. Current time: 12/10/23, 3:31:17 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 4,789 MB. GUI used memory: 142 MB. Current time: 12/10/23, 3:32:17 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 4,809 MB. GUI used memory: 142 MB. Current time: 12/10/23, 3:33:17 PM UTC
// [Engine Memory]: 4,817 MB (+32674kb) [01:56:32]
// HMemoryUtils.trashcanNow. Engine heap size: 4,830 MB. GUI used memory: 142 MB. Current time: 12/10/23, 3:34:22 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 4,850 MB. GUI used memory: 142 MB. Current time: 12/10/23, 3:35:22 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 4,871 MB. GUI used memory: 142 MB. Current time: 12/10/23, 3:36:22 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 4,891 MB. GUI used memory: 142 MB. Current time: 12/10/23, 3:37:22 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 4,912 MB. GUI used memory: 142 MB. Current time: 12/10/23, 3:38:22 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 4,933 MB. GUI used memory: 142 MB. Current time: 12/10/23, 3:39:22 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 4,953 MB. GUI used memory: 142 MB. Current time: 12/10/23, 3:40:22 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 4,974 MB. GUI used memory: 139 MB. Current time: 12/10/23, 3:41:22 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 4,994 MB. GUI used memory: 139 MB. Current time: 12/10/23, 3:42:22 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 5,014 MB. GUI used memory: 139 MB. Current time: 12/10/23, 3:43:22 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 5,035 MB. GUI used memory: 139 MB. Current time: 12/10/23, 3:44:22 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 5,055 MB. GUI used memory: 139 MB. Current time: 12/10/23, 3:45:22 PM UTC
// [Engine Memory]: 5,061 MB (+3254kb) [02:08:30]
// HMemoryUtils.trashcanNow. Engine heap size: 5,076 MB. GUI used memory: 139 MB. Current time: 12/10/23, 3:46:22 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 5,097 MB. GUI used memory: 139 MB. Current time: 12/10/23, 3:47:22 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 5,117 MB. GUI used memory: 139 MB. Current time: 12/10/23, 3:48:22 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 5,138 MB. GUI used memory: 139 MB. Current time: 12/10/23, 3:49:22 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 5,159 MB. GUI used memory: 139 MB. Current time: 12/10/23, 3:50:22 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 5,179 MB. GUI used memory: 139 MB. Current time: 12/10/23, 3:51:22 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 5,200 MB. GUI used memory: 139 MB. Current time: 12/10/23, 3:52:22 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 5,220 MB. GUI used memory: 139 MB. Current time: 12/10/23, 3:53:22 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 5,241 MB. GUI used memory: 139 MB. Current time: 12/10/23, 3:54:22 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 5,382 MB. GUI used memory: 139 MB. Current time: 12/10/23, 3:55:02 PM UTC
// [Engine Memory]: 5,382 MB (+71202kb) [02:18:34]
// HMemoryUtils.trashcanNow. Engine heap size: 5,402 MB. GUI used memory: 139 MB. Current time: 12/10/23, 3:59:02 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 5,423 MB. GUI used memory: 139 MB. Current time: 12/10/23, 4:00:02 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 5,444 MB. GUI used memory: 139 MB. Current time: 12/10/23, 4:01:02 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 5,465 MB. GUI used memory: 139 MB. Current time: 12/10/23, 4:02:02 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 5,486 MB. GUI used memory: 139 MB. Current time: 12/10/23, 4:03:02 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 5,506 MB. GUI used memory: 139 MB. Current time: 12/10/23, 4:04:02 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 5,527 MB. GUI used memory: 139 MB. Current time: 12/10/23, 4:05:02 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 5,547 MB. GUI used memory: 139 MB. Current time: 12/10/23, 4:06:02 PM UTC
// HMemoryUtils.trashcanNow. Engine heap size: 5,568 MB. GUI used memory: 139 MB. Current time: 12/10/23, 4:07:02 PM UTC
// Elapsed time: 3286 seconds
selectButton("HStatusBar_ProgressStatusItem_Cancel", "Cancel"); // NullButton (ag, cr)
// Tcl Message: prepost_useincr_ex_o_reg_muxo2d_net 
// HMemoryUtils.trashcanNow. Engine heap size: 5,573 MB. GUI used memory: 139 MB. Current time: 12/10/23, 4:07:20 PM UTC
dismissDialog("Tcl Command Line"); // bB (cr)
closeView(PAResourceOtoP.PAViews_SCHEMATIC, "Schematic"); // f
// HMemoryUtils.trashcanNow. Engine heap size: 5,597 MB. GUI used memory: 144 MB. Current time: 12/10/23, 4:07:29 PM UTC
selectButton(RDIResource.HTree_COLLAPSE_ALL, "Netlist_collapse_all"); // l (f, cr)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, decoder_i (riscv_decoder)]", 4); // bD (O, cr)
collapseTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, decoder_i (riscv_decoder)]", 4); // bD (O, cr)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, Leaf Cells (3735)]", 2); // bD (O, cr)
selectTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, Leaf Cells (3735)]", 2, true, false, false, false, true, false); // bD (O, cr) - Popup Trigger - Node
selectMenu(PAResourceItoN.InstanceMenu_FLOORPLANNING, "Floorplanning"); // af (ao, cr)
selectMenu(PAResourceOtoP.PrimitivesMenu_HIGHLIGHT_LEAF_CELLS, "Highlight Leaf Cells"); // af (ao, cr)
selectMenuItem(PAResourceCommand.PACommandNames_SCHEMATIC, "Schematic"); // ai (ao, cr)
// Run Command: PAResourceCommand.PACommandNames_SCHEMATIC
// Schematic: addNotify
// Elapsed time: 14 seconds
selectTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, Leaf Cells (3735), alu_clpx_shift_ex_o_reg[1] (FDCE)]", 10, false); // bD (O, cr)
// Elapsed time: 15 seconds
selectButton(RDIResource.HTree_COLLAPSE_ALL, "Netlist_collapse_all"); // l (f, cr)
expandTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, Leaf Cells (3735)]", 2); // bD (O, cr)
selectTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, Leaf Cells (3735), alu_is_clpx_ex_o_reg (FDCE)]", 23, false); // bD (O, cr)
selectTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, Leaf Cells (3735), alu_is_clpx_ex_o_reg_and1 (AND2B1L)]", 24, false); // bD (O, cr)
selectTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, Leaf Cells (3735), alu_operand_a_ex_o_reg[3] (FDCE)]", 176, false); // bD (O, cr)
// Elapsed time: 25 seconds
selectTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, Leaf Cells (3735), regfile_we_ex_o_reg_OR (OR2L)]", 3725, false); // bD (O, cr)
selectTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, Leaf Cells (3735), regfile_we_ex_o_reg (FDCE)]", 3721, false); // bD (O, cr)
// Elapsed time: 16 seconds
selectTree(PAResourceItoN.NetlistTreeView_NETLIST_TREE, "[riscv_id_stage, Leaf Cells (3735), regfile_we_ex_o_reg_and1 (AND2B1L)]", 3722, false); // bD (O, cr)
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Synthesis, Run Synthesis]", 14, false); // u (O, cr)
// Run Command: PAResourceCommand.PACommandNames_RUN_SYNTHESIS
// bB (cr):  Resetting Runs : addNotify
selectButton("OptionPane.button", "OK"); // JButton (A, G)
// TclEventType: RUN_MODIFY
// TclEventType: RUN_RESET
// TclEventType: DESIGN_STALE
// TclEventType: RUN_RESET
// TclEventType: RUN_STATUS_CHANGE
// TclEventType: RUN_RESET
// TclEventType: RUN_MODIFY
// Tcl Message: reset_run synth_1 
// f (cr): Launch Runs: addNotify
// HMemoryUtils.trashcanNow. Engine heap size: 5,620 MB. GUI used memory: 145 MB. Current time: 12/10/23, 4:09:22 PM UTC
// Elapsed time: 15 seconds
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (f)
// bB (cr):  Starting Design Runs : addNotify
dismissDialog("Launch Runs"); // f (cr)
// Tcl Message: launch_runs synth_1 -jobs 24 
// TclEventType: FILESET_TARGET_UCF_CHANGE
// TclEventType: DESIGN_STALE
// TclEventType: RUN_LAUNCH
// TclEventType: RUN_MODIFY
// TclEventType: RUN_STATUS_CHANGE
// Tcl Message: [Sun Dec 10 16:09:37 2023] Launched synth_1... Run output will be captured here: /home/azafeer/Desktop/test/pulp-master/fpga/pulp/pulp-zcu102.runs/synth_1/runme.log 
// 'k' command handler elapsed time: 19 seconds
dismissDialog("Starting Design Runs"); // bB (cr)
// TclEventType: RUN_STATUS_CHANGE
// TclEventType: DESIGN_STALE
// TclEventType: RUN_COMPLETED
// TclEventType: RUN_STATUS_CHANGE
// TclEventType: RUN_STEP_COMPLETED
// aj (cr): Synthesis Completed: addNotify
// Elapsed time: 321 seconds
selectRadioButton(PAResourceCommand.PACommandNames_GOTO_NETLIST_DESIGN, "Open Synthesized Design"); // a (Q, aj)
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (aj)
// Run Command: PAResourceCommand.PACommandNames_GOTO_NETLIST_DESIGN
// bB (cr):  Reloading design : addNotify
// TclEventType: DESIGN_CLOSE
// HMemoryUtils.trashcanNow. Engine heap size: 5,621 MB. GUI used memory: 136 MB. Current time: 12/10/23, 4:15:02 PM UTC
// Engine heap size: 5,621 MB. GUI used memory: 136 MB. Current time: 12/10/23, 4:15:02 PM UTC
// WARNING: HEventQueue.dispatchEvent() is taking  1785 ms.
// TclEventType: CURR_DESIGN_SET
// Tcl Message: close_design 
// TclEventType: DESIGN_CLOSE
// Tcl Message: open_run synth_1 -name synth_1 
// Tcl Message: Design is defaulting to impl run constrset: constrs_1 Design is defaulting to synth run part: xczu9eg-ffvb1156-2-e 
// TclEventType: READ_XDC_FILE_START
// TclEventType: READ_XDC_FILE_END
// TclEventType: FLOORPLAN_MODIFY
// TclEventType: DESIGN_NEW
// HMemoryUtils.trashcanNow. Engine heap size: 5,538 MB. GUI used memory: 77 MB. Current time: 12/10/23, 4:15:46 PM UTC
// Xgd.load filename: /cad/xilinx/Vivado/2019.2/data/parts/xilinx/zynquplus/devint/zynquplus/xczu9eg/xczu9eg.xgd; ZipEntry: xczu9eg_detail.xgd elapsed time: 0.9s
// TclEventType: DESIGN_NEW
// TclEventType: HFED_INIT_ROUTE_STORAGE_COMPLETED
// RouteApi::loadEngineXgd elapsed time: 1.5s
// Device: addNotify
// DeviceView Instantiated
// WARNING: HEventQueue.dispatchEvent() is taking  1821 ms.
// Tcl Message: Netlist sorting complete. Time (s): cpu = 00:00:00.04 ; elapsed = 00:00:00.03 . Memory (MB): peak = 10966.391 ; gain = 0.000 ; free physical = 5944 ; free virtual = 88143 
// Tcl Message: INFO: [Netlist 29-17] Analyzing 649 Unisim elements for replacement INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds INFO: [Project 1-479] Netlist was created with Vivado 2019.2 INFO: [Project 1-570] Preparing netlist for logic optimization 
// Tcl Message: Parsing XDC File [/home/azafeer/Desktop/test/pulp-master/fpga/pulp-zcu102/constraints/zcu102.xdc] 
// TclEventType: CURR_DESIGN_SET
// Tcl Message: INFO: [Timing 38-35] Done setting XDC timing constraints. [/home/azafeer/Desktop/test/pulp-master/fpga/pulp-zcu102/constraints/zcu102.xdc:25] 
// Tcl Message: INFO: [Common 17-14] Message 'Common 17-55' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings. [/home/azafeer/Desktop/test/pulp-master/fpga/pulp-zcu102/constraints/zcu102.xdc:45] 
// Tcl Message: INFO: [Vivado 12-626] No clocks found. Please use 'create_clock' or 'create_generated_clock' command to create clocks. [/home/azafeer/Desktop/test/pulp-master/fpga/pulp-zcu102/constraints/zcu102.xdc:61] 
// Tcl Message: INFO: [Vivado 12-626] No clocks found. Please use 'create_clock' or 'create_generated_clock' command to create clocks. [/home/azafeer/Desktop/test/pulp-master/fpga/pulp-zcu102/constraints/zcu102.xdc:61] 
// Tcl Message: INFO: [Vivado 12-626] No clocks found. Please use 'create_clock' or 'create_generated_clock' command to create clocks. [/home/azafeer/Desktop/test/pulp-master/fpga/pulp-zcu102/constraints/zcu102.xdc:61] 
// Tcl Message: INFO: [Vivado 12-626] No clocks found. Please use 'create_clock' or 'create_generated_clock' command to create clocks. [/home/azafeer/Desktop/test/pulp-master/fpga/pulp-zcu102/constraints/zcu102.xdc:65] 
// Tcl Message: INFO: [Vivado 12-626] No clocks found. Please use 'create_clock' or 'create_generated_clock' command to create clocks. [/home/azafeer/Desktop/test/pulp-master/fpga/pulp-zcu102/constraints/zcu102.xdc:65] 
// Tcl Message: INFO: [Vivado 12-626] No clocks found. Please use 'create_clock' or 'create_generated_clock' command to create clocks. [/home/azafeer/Desktop/test/pulp-master/fpga/pulp-zcu102/constraints/zcu102.xdc:68] 
// Tcl Message: INFO: [Vivado 12-626] No clocks found. Please use 'create_clock' or 'create_generated_clock' command to create clocks. [/home/azafeer/Desktop/test/pulp-master/fpga/pulp-zcu102/constraints/zcu102.xdc:68] 
// Tcl Message: INFO: [Vivado 12-626] No clocks found. Please use 'create_clock' or 'create_generated_clock' command to create clocks. [/home/azafeer/Desktop/test/pulp-master/fpga/pulp-zcu102/constraints/zcu102.xdc:93] 
// Tcl Message: INFO: [Vivado 12-626] No clocks found. Please use 'create_clock' or 'create_generated_clock' command to create clocks. [/home/azafeer/Desktop/test/pulp-master/fpga/pulp-zcu102/constraints/zcu102.xdc:93] 
// Tcl Message: INFO: [Vivado 12-626] No clocks found. Please use 'create_clock' or 'create_generated_clock' command to create clocks. [/home/azafeer/Desktop/test/pulp-master/fpga/pulp-zcu102/constraints/zcu102.xdc:94] 
// Tcl Message: INFO: [Vivado 12-626] No clocks found. Please use 'create_clock' or 'create_generated_clock' command to create clocks. [/home/azafeer/Desktop/test/pulp-master/fpga/pulp-zcu102/constraints/zcu102.xdc:94] 
// Tcl Message: INFO: [Vivado 12-626] No clocks found. Please use 'create_clock' or 'create_generated_clock' command to create clocks. [/home/azafeer/Desktop/test/pulp-master/fpga/pulp-zcu102/constraints/zcu102.xdc:95] 
// Tcl Message: INFO: [Vivado 12-626] No clocks found. Please use 'create_clock' or 'create_generated_clock' command to create clocks. [/home/azafeer/Desktop/test/pulp-master/fpga/pulp-zcu102/constraints/zcu102.xdc:95] 
// Tcl Message: INFO: [Vivado 12-626] No clocks found. Please use 'create_clock' or 'create_generated_clock' command to create clocks. [/home/azafeer/Desktop/test/pulp-master/fpga/pulp-zcu102/constraints/zcu102.xdc:96] 
// Tcl Message: INFO: [Vivado 12-626] No clocks found. Please use 'create_clock' or 'create_generated_clock' command to create clocks. [/home/azafeer/Desktop/test/pulp-master/fpga/pulp-zcu102/constraints/zcu102.xdc:96] 
// Tcl Message: Finished Parsing XDC File [/home/azafeer/Desktop/test/pulp-master/fpga/pulp-zcu102/constraints/zcu102.xdc] 
// Tcl Message: INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s). 
// Tcl Message: Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 10966.391 ; gain = 0.000 ; free physical = 7343 ; free virtual = 89542 
// Tcl Message: INFO: [Project 1-111] Unisim Transformation Summary:   A total of 245 instances were transformed.   IBUF => IBUF (IBUFCTRL, INBUF): 245 instances  
// ExpRunCommands.openSynthResults elapsed time: 46.2s
// Device view-level: 0.0
// Tcl Message: open_run: Time (s): cpu = 00:00:55 ; elapsed = 00:00:46 . Memory (MB): peak = 10987.398 ; gain = 21.008 ; free physical = 7264 ; free virtual = 89464 
// S (cr): Critical Messages: addNotify
// Elapsed time: 49 seconds
dismissDialog("Reloading design"); // bB (cr)
// RouteApi::initDelayMediator elapsed time: 3.3s
// RouteApi: Init Delay Mediator Swing Worker Finished
// Elapsed time: 423 seconds
selectButton(PAResourceAtoD.CmdMsgDialog_OK, "OK"); // f (S)
dismissDialog("Critical Messages"); // S (cr)
// Elapsed time: 314 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, (String) null); // aF (ac, cr)
// Tcl Command: 'set reg_count [llength [lindex [all_registers -cells]]]; ; set reg_list [lindex [all_registers -cells]]; ; for {set x 0} {$x<$reg_count} {incr x} { create_cell -reference MUXF7 [lindex $reg_list $x]_mux }; ; set input_nets [get_nets -of_objects [get_pins -of_objects $reg_list -filter {REF_PIN_NAME=~D}]]; ; f...'
// Tcl Command: 'set reg_count [llength [lindex [all_registers -cells]]]'
// Tcl Command: ''
// Tcl Command: 'set reg_list [lindex [all_registers -cells]]'
// Tcl Command: ''
// Tcl Command: 'for {set x 0} {$x<$reg_count} {incr x} { create_cell -reference MUXF7 [lindex $reg_list $x]_mux }'
// TclEventType: NETLIST_UPDATE
// Tcl Message: set reg_count [llength [lindex [all_registers -cells]]] 
// Tcl Message: INFO: [Timing 38-35] Done setting XDC timing constraints. 
// Tcl Message: 1835 
// Tcl Message: set reg_list [lindex [all_registers -cells]] 
// TclEventType: NETLIST_UPDATE
// Tcl Message: for {set x 0} {$x<$reg_count} {incr x} { create_cell -reference MUXF7 [lindex $reg_list $x]_mux } 
// TclEventType: NETLIST_UPDATE
// bB (cr):  Tcl Command Line : addNotify
// TclEventType: NETLIST_UPDATE
// Tcl Command: ''
// Tcl Command: 'set input_nets [get_nets -of_objects [get_pins -of_objects $reg_list -filter {REF_PIN_NAME=~D}]]'
// Tcl Command: ''
// Tcl Command: 'for {set x 0} {$x<$reg_count} {incr x} { create_cell -reference AND2B1L [lindex $reg_list $x]_and1 [lindex $reg_list $x]_and2 }'
// TclEventType: NETLIST_UPDATE
// Tcl Message: set input_nets [get_nets -of_objects [get_pins -of_objects $reg_list -filter {REF_PIN_NAME=~D}]] 
// Tcl Message: for {set x 0} {$x<$reg_count} {incr x} { create_cell -reference AND2B1L [lindex $reg_list $x]_and1 [lindex $reg_list $x]_and2 } 
// TclEventType: NETLIST_UPDATE
// Tcl Command: ''
// Tcl Command: ''
// Tcl Command: 'for {set x 0} {$x<$reg_count} {incr x} { create_net  [lindex $reg_list $x]_and1or_net [lindex $reg_list $x]_and2or_net [lindex $reg_list $x]_muxo2d_net [lindex $reg_list $x]_mux_sel_net [lindex $reg_list $x]_or2mux_net}'
// TclEventType: NETLIST_UPDATE
// Tcl Message: for {set x 0} {$x<$reg_count} {incr x} { create_net  [lindex $reg_list $x]_and1or_net [lindex $reg_list $x]_and2or_net [lindex $reg_list $x]_muxo2d_net [lindex $reg_list $x]_mux_sel_net [lindex $reg_list $x]_or2mux_net} 
// TclEventType: NETLIST_UPDATE
// Tcl Command: ''
// Tcl Command: 'for {set x 0} {$x<$reg_count} {incr x} { create_cell -reference OR2L [lindex $reg_list $x]_OR }'
// TclEventType: NETLIST_UPDATE
// Tcl Message: for {set x 0} {$x<$reg_count} {incr x} { create_cell -reference OR2L [lindex $reg_list $x]_OR } 
// TclEventType: NETLIST_UPDATE
// Tcl Command: '#1'
// Tcl Command: '##for {set x 0} {$x< $reg_count} {incr x} { connect_net -net [get_nets [lindex $reg_list 1]_muxo2d_net] -objects  [list [get_pins -of_objects [lindex $reg_list $x] -filter {REF_PIN_NAME=~D}] [get_pins -of_objects [get_cells [lindex $reg_list $x]_mux] -filter {REF_PIN_NAME =~O}] ]}'
// Tcl Command: ''
// Tcl Command: '#connect the output of OR gate to the input I1 of MUX'
// Tcl Command: 'for {set x 0} {$x< $reg_count} {incr x} { connect_net -hierarchical -net [get_nets [lindex $reg_list $x]_or2mux_net] -objects  [list [get_pins -of_objects [get_cells [lindex $reg_list $x]_OR] -filter {REF_PIN_NAME =~O}] [get_pins -of_objects [get_cells [lindex $reg_list $x]_mux] -filter {REF_PIN_NAME =~I1}]]}'
// TclEventType: NETLIST_UPDATE
// Tcl Message: #1 
// Tcl Message: ##for {set x 0} {$x< $reg_count} {incr x} { connect_net -net [get_nets [lindex $reg_list 1]_muxo2d_net] -objects  [list [get_pins -of_objects [lindex $reg_list $x] -filter {REF_PIN_NAME=~D}] [get_pins -of_objects [get_cells [lindex $reg_list $x]_mux] -filter {REF_PIN_NAME =~O}] ]} 
// Tcl Message: #connect the output of OR gate to the input I1 of MUX 
// Tcl Message: for {set x 0} {$x< $reg_count} {incr x} { connect_net -hierarchical -net [get_nets [lindex $reg_list $x]_or2mux_net] -objects  [list [get_pins -of_objects [get_cells [lindex $reg_list $x]_OR] -filter {REF_PIN_NAME =~O}] [get_pins -of_objects [get_cells [lindex $reg_list $x]_mux] -filter {REF_PIN_NAME =~I1}]]} 
// TclEventType: NETLIST_UPDATE
// Tcl Command: ''
// Tcl Command: '##connect the output of AND gate 1 to the input DI of ORGATE'
// Tcl Command: 'for {set x 0} {$x< $reg_count} {incr x} { connect_net -net [get_nets [lindex $reg_list $x]_and1or_net] -objects  [list [get_pins -of_objects [get_cells [lindex $reg_list $x]_and1] -filter {REF_PIN_NAME =~O}] [get_pins -of_objects [get_cells [lindex $reg_list $x]_OR] -filter {REF_PIN_NAME =~DI}]]}'
// TclEventType: NETLIST_UPDATE
// Tcl Message: ##connect the output of AND gate 1 to the input DI of ORGATE 
// Tcl Message: for {set x 0} {$x< $reg_count} {incr x} { connect_net -net [get_nets [lindex $reg_list $x]_and1or_net] -objects  [list [get_pins -of_objects [get_cells [lindex $reg_list $x]_and1] -filter {REF_PIN_NAME =~O}] [get_pins -of_objects [get_cells [lindex $reg_list $x]_OR] -filter {REF_PIN_NAME =~DI}]]} 
// TclEventType: NETLIST_UPDATE
// Tcl Command: ''
// Tcl Command: '##connect the output of AND gate 2 to the input SRI of ORGATE'
// Tcl Command: 'for {set x 0} {$x< $reg_count} {incr x} { connect_net -net [get_nets [lindex $reg_list $x]_and2or_net] -objects  [list [get_pins -of_objects [get_cells [lindex $reg_list $x]_and2] -filter {REF_PIN_NAME =~O}] [get_pins -of_objects [get_cells [lindex $reg_list $x]_OR] -filter {REF_PIN_NAME =~SRI}]]}'
// TclEventType: NETLIST_UPDATE
// Tcl Message: ##connect the output of AND gate 2 to the input SRI of ORGATE 
// TclEventType: NETLIST_UPDATE
// Tcl Message: for {set x 0} {$x< $reg_count} {incr x} { connect_net -net [get_nets [lindex $reg_list $x]_and2or_net] -objects  [list [get_pins -of_objects [get_cells [lindex $reg_list $x]_and2] -filter {REF_PIN_NAME =~O}] [get_pins -of_objects [get_cells [lindex $reg_list $x]_OR] -filter {REF_PIN_NAME =~SRI}]]} 
// TclEventType: NETLIST_UPDATE
// Tcl Command: ''
// Tcl Command: '#change the below to use mux_sel_net connect the DI and SRI of both and gates together, along witth mux'
// Tcl Command: 'for {set x 0} {$x< $reg_count} {incr x} { connect_net -net [get_nets [lindex $reg_list $x]_mux_sel_net] -objects  [list [get_pins -of_objects [get_cells [lindex $reg_list $x]_and1] -filter {REF_PIN_NAME =~SRI}] [get_pins -of_objects [get_cells [lindex $reg_list $x]_and2] -filter {REF_PIN_NAME =~DI}] [get_pins -of_objects [get_cells [lindex $reg_list $x]_mux] -filter {REF_PIN_NAME =~S}]]}'
// TclEventType: NETLIST_UPDATE
// Tcl Message: #change the below to use mux_sel_net connect the DI and SRI of both and gates together, along witth mux 
// Tcl Message: for {set x 0} {$x< $reg_count} {incr x} { connect_net -net [get_nets [lindex $reg_list $x]_mux_sel_net] -objects  [list [get_pins -of_objects [get_cells [lindex $reg_list $x]_and1] -filter {REF_PIN_NAME =~SRI}] [get_pins -of_objects [get_cells [lindex $reg_list $x]_and2] -filter {REF_PIN_NAME =~DI}] [get_pins -of_objects [get_cells [lindex $reg_list $x]_mux] -filter {REF_PIN_NAME =~S}]]} 
// TclEventType: NETLIST_UPDATE
// HMemoryUtils.trashcanNow. Engine heap size: 5,620 MB. GUI used memory: 143 MB. Current time: 12/10/23, 4:36:06 PM UTC
// Elapsed time: 477 seconds
dismissDialog("Tcl Command Line"); // bB (cr)
// Elapsed time: 624 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "get_pins -of_objects [get_nets [lindex $input_nets $x]]", true); // aF (ac, cr)
// Tcl Command: 'get_pins -of_objects [get_nets [lindex $input_nets $x]]'
// Tcl Command: 'get_pins -of_objects [get_nets [lindex $input_nets $x]]'
// Tcl Message: get_pins -of_objects [get_nets [lindex $input_nets $x]] 
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "get_pins -of_objects [get_nets [lindex $input_nets 1]]", true); // aF (ac, cr)
// Tcl Command: 'get_pins -of_objects [get_nets [lindex $input_nets 1]]'
// Tcl Command: 'get_pins -of_objects [get_nets [lindex $input_nets 1]]'
// Tcl Message: get_pins -of_objects [get_nets [lindex $input_nets 1]] 
// Tcl Message: alu_operand_c_ex_o_reg[26]/D mult_dot_op_c_ex_o_reg[26]/D mult_operand_c_ex_o_reg[26]/D alu_operand_c_ex_o[26]_i_1/O 
// Elapsed time: 136 seconds
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, (String) null); // aF (ac, cr)
